# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 4e481c3c1b68b5bc
    crd.solo.io/version: 2.3.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: graphqlpersistedquerycachepolicies.resilience.policy.gloo.solo.io
spec:
  group: resilience.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: GraphQLPersistedQueryCachePolicy
    listKind: GraphQLPersistedQueryCachePolicyList
    plural: graphqlpersistedquerycachepolicies
    shortNames:
    - gqlpq
    - gqlpqc
    singular: graphqlpersistedquerycachepolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              To improve network performance for large query strings, the GraphQL filter supports
              automatic persisted queries. A persisted query is a query string that's cached on the server side,
              along with it's hash. The client can then send the hash instead of the full query string, thus
              reducing request sizes (responses are unaffected).
              Persisted queries are especially effective when clients send queries as GET requests.
              This enables clients to take advantage of the browser cache and integrate with a CDN.
              If left empty, persisted query cache is not used.
            properties:
              applyToRoutes:
                description: |-
                  Select the graphql routes where the policy will be applied.
                  If left empty, will apply to no graphql routes.
                  selection via Destination selectors will not work for this policy, and only
                  route selectors will work.
                  If more than one GraphQLPersistedQueryCachePolicy applies to a GraphQLRoute, the oldest
                  one will be applied.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: Only select routes attached to route tables
                            matching the cluster.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Select routes including all specified labels
                            on the route or route table.
                          type: object
                        name:
                          description: DEPRECATED. This field has been deprecated.
                            It is ignored. Use labels to select routes.
                          type: string
                        namespace:
                          description: Only select routes attached to route tables
                            matching the namespace.
                          type: string
                        workspace:
                          description: Only select routes attached to route tables
                            matching the workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: the kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            the port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        selector:
                          description: selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: Persisted query cache configuration.
                properties:
                  cacheSize:
                    description: The number of queries to store in the persisted query
                      cache, defaults to 1000.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
            type: object
          status:
            description: reflects the status of the GraphQLPersistedQueryCachePolicy
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedRoutes:
                description: A list of references to all routes selected by the policy.
                items:
                  properties:
                    routeIndex:
                      description: The index of the route on the route table
                      format: int32
                      type: integer
                    routeName:
                      description: The name of the route
                      type: string
                    routeTable:
                      description: The route table containing the route
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 63721e030613b91c
    crd.solo.io/version: 2.3.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: failoverpolicies.resilience.policy.gloo.solo.io
spec:
  group: resilience.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: FailoverPolicy
    listKind: FailoverPolicyList
    plural: failoverpolicies
    shortNames:
    - fp
    singular: failoverpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              FailoverPolicy is used to enable or configure failover routing for traffic being sent to selected destinations.
              When traffic is being routed to a backing service within a selected virtual destination, if that backing service is detected as being in an unhealthy state, traffic will be re-routed to another healthy backing service by locality as specified in the FailoverPolicy config.
              FailoverPolicy can be used to reroute traffic across clusters when the local instance of a destination service fails. This requires that the backing destinations of the selected virtual destination belong to meshes in the same TrustDomain.
              FailoverPolicies are applied at the *Destination* level.

              Note: To remove unhealthy destinations from the pool of routable destinations, you must use an [OutlierDetectionPolicy]({{"{{"}}< versioned_link_path fromRoot="/policies/outlier-detection/">{{"}}"}})
              in addition to the FailoverPolicy.
            properties:
              applyToDestinations:
                description: |-
                  select the virtual destinations where the policy will be applied
                  if left empty, will apply to all destinations in the workspace.
                items:
                  properties:
                    kind:
                      description: the kind of destination being selected. defaults
                        to Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: |-
                        the port on the Destination which receives traffic.
                        All ports on the Destination will be selected if left empty.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    selector:
                      description: selector used to match destination objects by their
                        metadata
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: |-
                  The details of the failover policy to apply to the selected virtual destinations.

                  You can exclude this if you wish to enable the locality load balancer
                  settings without mappings.
                properties:
                  localityMappings:
                    description: |-
                      Mappings between localities to provide failover for traffic
                      across regions, zones, and subzones.

                      You can exclude this if you wish to enable the locality load balancer
                      settings without mappings.
                    items:
                      properties:
                        from:
                          description: Originating locality of the client workload.
                          properties:
                            region:
                              description: The locality's region.
                              type: string
                            subZone:
                              description: (Optional) The locality's sub-zone.
                              type: string
                            zone:
                              description: (Optional) The locality's zone.
                              type: string
                          type: object
                        to:
                          description: The list of Destination localities that can
                            be routed to if the instance local to the client workload
                            is not available.
                          items:
                            properties:
                              region:
                                description: The locality's region.
                                type: string
                              subZone:
                                description: (Optional) The locality's sub-zone.
                                type: string
                              weight:
                                description: |-
                                  (Optional) Weight for destination locality. All weights must add up to 100.
                                  If not provided, we will determine the weight based on other
                                  destination locality weights.
                                  For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/u-int32-value).
                                maximum: 4294967295
                                minimum: 0
                                nullable: true
                                type: integer
                              zone:
                                description: (Optional) The locality's zone.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
            type: object
          status:
            description: reflects the status of the FailoverPolicy
            properties:
              common:
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state
                          of the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedDestinationPorts:
                description: The number of destination ports selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: aef97678c4b3a684
    crd.solo.io/version: 2.3.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: outlierdetectionpolicies.resilience.policy.gloo.solo.io
spec:
  group: resilience.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: OutlierDetectionPolicy
    listKind: OutlierDetectionPolicyList
    plural: outlierdetectionpolicies
    shortNames:
    - odp
    singular: outlierdetectionpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              OutlierDetectionPolicy is used to configure [outlier detection](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/outlier) on the selected destinations.
              Specifying this field requires an empty `source_selector` because it must apply to all traffic.
              OutlierDetectionPolicies are applied at the *Destination* level.

              For VirtualDestinations, traffic will not be sent to deployments that are unavailable by default.
              An OutlierDetectionPolicy will add configuration to also eject a deployment that is returning too many 5xx HTTP status codes.
            properties:
              applyToDestinations:
                description: |-
                  select the destinations where the policy will be applied
                  if left empty, will apply to all destinations in the workspace.
                items:
                  properties:
                    kind:
                      description: the kind of destination being selected. defaults
                        to Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: |-
                        the port on the Destination which receives traffic.
                        All ports on the Destination will be selected if left empty.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    selector:
                      description: selector used to match destination objects by their
                        metadata
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: The details of the OutlierDetectionPolicy to apply to
                  the selected destinations.
                properties:
                  baseEjectionTime:
                    description: |-
                      The minimum time duration for ejection, or the time when a destination is considered unhealthy and not used for load balancing.
                      Set this value as an integer plus a unit of time, in the format `1h`, `1m`, `1s`, or `1ms`. The value must be at least `1ms`, and defaults to `30s`.
                      For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/duration).
                    type: string
                  consecutiveErrors:
                    description: The number of 5xx errors before a destination is
                      removed from the healthy connection pool. The default is 5.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  interval:
                    description: |-
                      The amount of time between analyzing destinations for ejection.
                      Set this value as an integer plus a unit of time, in the format `1h`, `1m`, `1s`, or `1ms`. The value must be at least `1ms`, and defaults to `10s`.
                      For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/duration).
                    type: string
                  maxEjectionPercent:
                    description: |-
                      The maximum percentage of destinations that can be removed from the healthy connection pool at a time.
                      For example, if you have 10 total destinations that the policy selects, and set this value to 50 percent, 5 destinations can be removed at once.
                      At least 1 destination can always be removed, regardless of the value you set. You can set this value between `0` and `100`, with a default of `100`.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
            type: object
          status:
            description: reflects the status of the OutlierDetectionPolicy
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedDestinationPorts:
                description: A list of destination ports selected by the policy.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - properties:
                          function:
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - awsLambda
                            - required:
                              - awsLambda
                        required:
                        - function
                  - properties:
                      function:
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - awsLambda
                        - required:
                          - awsLambda
                    required:
                    - function
                  properties:
                    function:
                      properties:
                        awsLambda:
                          properties:
                            invocationStyle:
                              description: |-
                                Can be either Sync or Async. See [AWS Invoke](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html)
                                for more details.
                              enum:
                              - SYNC
                              - ASYNC
                              type: string
                            requestTransformation:
                              enum:
                              - REQUEST_DEFAULT
                              - REQUEST_DISABLE
                              type: string
                            responseTransformation:
                              enum:
                              - RESPONSE_DEFAULT
                              - RESPONSE_DISABLE
                              type: string
                          type: object
                        logicalName:
                          description: The logical name used to call the specified
                            Cloud Provider.
                          type: string
                      type: object
                    kind:
                      description: the kind of destination being selected. defaults
                        to Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      - CLOUD_PROVIDER
                      type: string
                    port:
                      description: the port on the destination object being targeted.
                        required if the object provides more than one port.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    ref:
                      description: reference to the destination object by its metadata
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                    subset:
                      additionalProperties:
                        type: string
                      description: |-
                        select a subset of the destination's endpoints for routing based on their labels.
                        Not applicable for a CloudProvider destination.
                      type: object
                    weight:
                      description: |-
                        Specify the proportion of traffic to be forwarded to this destination.
                        Weights across all of the `destinations` must sum to 100.
                        Weight is only relevant when used in the context of a route with multiple destinations.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: e20e6908addd7413
    crd.solo.io/version: 2.3.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: faultinjectionpolicies.resilience.policy.gloo.solo.io
spec:
  group: resilience.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: FaultInjectionPolicy
    listKind: FaultInjectionPolicyList
    plural: faultinjectionpolicies
    shortNames:
    - fip
    singular: faultinjectionpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              FaultInjectionPolicy is used to inject faults (latency and errors) into requests sent through the mesh.
              Fault specification is part of a VirtualService rule. Faults include
              aborting the Http request from downstream service, and/or delaying
              proxying of requests. A fault rule MUST HAVE delay or abort or both.
              FaultInjectionPolicies are applied at the *Route* level.
            properties:
              applyToRoutes:
                description: |-
                  select the routes where the policy will be applied
                  if left empty, will apply to all routes in the workspace.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: Only select routes attached to route tables
                            matching the cluster.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Select routes including all specified labels
                            on the route or route table.
                          type: object
                        name:
                          description: DEPRECATED. This field has been deprecated.
                            It is ignored. Use labels to select routes.
                          type: string
                        namespace:
                          description: Only select routes attached to route tables
                            matching the namespace.
                          type: string
                        workspace:
                          description: Only select routes attached to route tables
                            matching the workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: the kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            the port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        selector:
                          description: selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the fault injection policy to apply to
                  the selected routes.
                properties:
                  abort:
                    description: Abort the request and return the specified error
                      code back to traffic source.
                    properties:
                      httpStatus:
                        description: Required. HTTP status code to use to abort the
                          request.
                        format: int32
                        type: integer
                      percentage:
                        description: |-
                          Percentage of requests to be aborted. Values range between 0 and 100. If omitted all requests will be aborted.
                          For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/double-value).
                        nullable: true
                        type: number
                    type: object
                  delay:
                    description: |-
                      Indicate the amount of delay in seconds.
                      The optional _percentage_ field can be used to only delay a certain
                      percentage of requests. If left unspecified, all request will be delayed.
                    properties:
                      fixedDelay:
                        description: |-
                          Required. Add a delay of a fixed duration before sending the request. Format: `1h`/`1m`/`1s`/`1ms`. MUST be >=1ms.
                          For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/duration).
                        type: string
                      percentage:
                        description: |-
                          Percentage of requests on which the delay will be injected. Values range between 0 and 100. If omitted all requests will be delayed.
                          For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/double-value).
                        nullable: true
                        type: number
                    type: object
                type: object
            type: object
          status:
            description: reflects the status of the FaultInjectionPolicy
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedRoutes:
                description: A list of references to all routes selected by the policy.
                items:
                  properties:
                    routeIndex:
                      description: The index of the route on the route table
                      format: int32
                      type: integer
                    routeName:
                      description: The name of the route
                      type: string
                    routeTable:
                      description: The route table containing the route
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: f8a09e0beb54c3ba
    crd.solo.io/version: 2.3.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: retrytimeoutpolicies.resilience.policy.gloo.solo.io
spec:
  group: resilience.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: RetryTimeoutPolicy
    listKind: RetryTimeoutPolicyList
    plural: retrytimeoutpolicies
    shortNames:
    - rtp
    singular: retrytimeoutpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              RetryTimeoutPolicy is used to add automatic retries and timeouts to requests matching selected routes.
              RetryTimeoutPolicies are applied at the *Route* level.
            properties:
              applyToRoutes:
                description: |-
                  select the routes where the policy will be applied
                  if left empty, will apply to all routes in the workspace.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: Only select routes attached to route tables
                            matching the cluster.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Select routes including all specified labels
                            on the route or route table.
                          type: object
                        name:
                          description: DEPRECATED. This field has been deprecated.
                            It is ignored. Use labels to select routes.
                          type: string
                        namespace:
                          description: Only select routes attached to route tables
                            matching the namespace.
                          type: string
                        workspace:
                          description: Only select routes attached to route tables
                            matching the workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: the kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            the port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        selector:
                          description: selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the retry/timeout policy to apply to the
                  selected routes.
                properties:
                  requestTimeout:
                    description: |-
                      Set a timeout on requests matched on the selected routes.
                      For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/duration).
                    type: string
                  retries:
                    description: Set a retry policy on requests matched on the selected
                      routes.
                    properties:
                      attempts:
                        description: |-
                          Number of retries for a given request
                          The interval between retries will be determined automatically (25ms+). When request
                          `timeout` of the [HTTP route](https://istio.io/docs/reference/config/networking/virtual-service/#HTTPRoute)
                          or `per_try_timeout` is configured, the actual number of retries attempted also depends on
                          the specified request `timeout` and `per_try_timeout` values.
                          Defaults to 2 retries.
                          For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/int32-value).
                        maximum: 2147483647
                        minimum: -2147483648
                        nullable: true
                        type: integer
                      perTryTimeout:
                        description: |-
                          Timeout per retry attempt for a given request. Format: `1h`/`1m`/`1s`/`1ms`. *Must be >= 1ms*.
                          Default is same value as request `timeout` of
                          the [HTTP route](https://istio.io/docs/reference/config/networking/virtual-service/#HTTPRoute),
                          which means no timeout.
                          For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/duration).
                        type: string
                      retryOn:
                        description: |-
                          Specifies the conditions under which retry takes place.
                          One or more policies can be specified using a ‘,’ delimited list.
                          If `retry_on` specifies a valid HTTP status, it will be added to retriable_status_codes retry policy.
                          See the [retry policies](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-on)
                          and [gRPC retry policies](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-grpc-on) for more details.
                        type: string
                      retryRemoteLocalities:
                        description: |-
                          Flag to specify whether the retries should retry to other localities.
                          See the [retry plugin configuration](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/http/http_connection_management#retry-plugin-configuration) for more details.
                          Defaults to false.
                        nullable: true
                        type: boolean
                    type: object
                type: object
            type: object
          status:
            description: reflects the status of the RetryTimeoutPolicy
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedRoutes:
                description: A list of references to all routes selected by the policy.
                items:
                  properties:
                    routeIndex:
                      description: The index of the route on the route table
                      format: int32
                      type: integer
                    routeName:
                      description: The name of the route
                      type: string
                    routeTable:
                      description: The route table containing the route
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 3e6aed4745e0b177
    crd.solo.io/version: 2.3.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: connectionpolicies.resilience.policy.gloo.solo.io
spec:
  group: resilience.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ConnectionPolicy
    listKind: ConnectionPolicyList
    plural: connectionpolicies
    shortNames:
    - cp
    singular: connectionpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: ConnectionPolicy provides settings to apply low-level settings
              on selected TCP connections.
            properties:
              applyToDestinations:
                description: |-
                  select the destinations where the policy will be applied. If left empty,
                  this will apply to all destinations in the workspace.
                items:
                  properties:
                    kind:
                      description: the kind of destination being selected. defaults
                        to Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: |-
                        the port on the Destination which receives traffic.
                        All ports on the Destination will be selected if left empty.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    selector:
                      description: selector used to match destination objects by their
                        metadata
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: The details of the low-level network connection settings
                  to apply to the destinations.
                properties:
                  http:
                    description: The low-level HTTP connection settings to apply to
                      the destination selected.
                    properties:
                      idleTimeout:
                        description: |-
                          The idle timeout for upstream connection pool connections. The idle timeout is defined as the period in which there are no active requests.
                          If not set, the default is 1 hour. When the idle timeout is reached, the connection will be closed. If the connection is an HTTP/2 connection
                          a drain sequence will occur prior to closing the connection. Note that request based timeouts mean that HTTP/2 PINGs will not keep the connection alive.
                          Applies to both HTTP1.1 and HTTP2 connections.
                          For more information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/duration).
                        type: string
                      maxRequestsPerConnection:
                        description: Maximum number of requests per connection to
                          a backend. Setting this parameter to 1 disables keep alive.
                          Default 0, meaning “unlimited”, up to 2^29.
                        format: int32
                        type: integer
                      maxRetries:
                        description: Maximum number of retries that can be outstanding
                          to all hosts in a cluster at a given time. Defaults to 2^32-1.
                        format: int32
                        type: integer
                    type: object
                  tcp:
                    description: The low-level TCP connection settings to apply to
                      the destinations selected.
                    properties:
                      connectTimeout:
                        description: |-
                          Sets the TCP connection timeout. It must be greater than or equal to 1ms.
                          For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/duration).
                        type: string
                      maxConnections:
                        description: Sets the maximum allowed connections to the destination
                          host.
                        format: int32
                        type: integer
                      tcpKeepalive:
                        description: Sets the TCP keep-alive settings to apply to
                          selected destinations.
                        properties:
                          interval:
                            description: |-
                              The time duration between keep-alive probes.
                              Format examples: `1h`/`1m`/`1s`/`1ms`
                              For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/duration).
                            type: string
                          probes:
                            description: Maximum number of TCP keepalive probes to
                              send before determining that connection is dead.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          time:
                            description: |-
                              The time duration a connection needs to be idle before keep-alive probes start being sent.
                              Format examples: `1h`/`1m`/`1s`/`1ms`.
                              For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/duration).
                            type: string
                        type: object
                    type: object
                type: object
            type: object
          status:
            description: Reflects the status of the ConnectionPolicy.
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedDestiantionPorts:
                description: A list of destination ports selected by the policy.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - properties:
                          function:
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - awsLambda
                            - required:
                              - awsLambda
                        required:
                        - function
                  - properties:
                      function:
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - awsLambda
                        - required:
                          - awsLambda
                    required:
                    - function
                  properties:
                    function:
                      properties:
                        awsLambda:
                          properties:
                            invocationStyle:
                              description: |-
                                Can be either Sync or Async. See [AWS Invoke](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html)
                                for more details.
                              enum:
                              - SYNC
                              - ASYNC
                              type: string
                            requestTransformation:
                              enum:
                              - REQUEST_DEFAULT
                              - REQUEST_DISABLE
                              type: string
                            responseTransformation:
                              enum:
                              - RESPONSE_DEFAULT
                              - RESPONSE_DISABLE
                              type: string
                          type: object
                        logicalName:
                          description: The logical name used to call the specified
                            Cloud Provider.
                          type: string
                      type: object
                    kind:
                      description: the kind of destination being selected. defaults
                        to Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      - CLOUD_PROVIDER
                      type: string
                    port:
                      description: the port on the destination object being targeted.
                        required if the object provides more than one port.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    ref:
                      description: reference to the destination object by its metadata
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                    subset:
                      additionalProperties:
                        type: string
                      description: |-
                        select a subset of the destination's endpoints for routing based on their labels.
                        Not applicable for a CloudProvider destination.
                      type: object
                    weight:
                      description: |-
                        Specify the proportion of traffic to be forwarded to this destination.
                        Weights across all of the `destinations` must sum to 100.
                        Weight is only relevant when used in the context of a route with multiple destinations.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 79789165a418c678
    crd.solo.io/version: 2.3.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: trimproxyconfigpolicies.resilience.policy.gloo.solo.io
spec:
  group: resilience.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: TrimProxyConfigPolicy
    listKind: TrimProxyConfigPolicyList
    plural: trimproxyconfigpolicies
    shortNames:
    - tpcp
    singular: trimproxyconfigpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              Use the TrimConfigProxyPolicy to select workloads and their corresponding allowed destinations. Then, the Istio
              sidecar of the workloads keeps only the configuration of those allowed destinations instead of all the destinations
              in the Istio service mesh. Otherwise, the extra config can lead to memory pressure issues.
            properties:
              applyToWorkloads:
                description: Select the workloads for the policy to trim the Istio
                  sidecar config. If omitted, all workloads are selected.
                items:
                  properties:
                    kind:
                      description: The kind of workload being selected. Defaults to
                        Kube.
                      enum:
                      - KUBE
                      - VM
                      type: string
                    port:
                      description: |-
                        The port to select on the selected workloads.
                        Only applies to policies which select specific workload ports, such as the WasmDeploymentPolicy.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    selector:
                      description: Selector used to match Workload objects by their
                        metadata.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: Trim Proxy Config
                properties:
                  includedDestinations:
                    description: |-
                      Select which destinations to include in the trimmed sidecar proxy configuration of the workloads that this policy
                      applies to. You can select destinations by Kubernetes label. Destinations can be a Kubernetes service,
                      VirtualDestination, or ExternalService. To select all destinations, specify {}. If omitted or if the selection
                      does not match any destination, no destinations are selected and the sidecar proxy configurations of the
                      workloads are not trimmed. The destinations must be within the same workspace as the policy, or imported to the
                      workspace.
                    items:
                      properties:
                        kind:
                          description: the kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            the port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        selector:
                          description: selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                    type: array
                type: object
            type: object
          status:
            description: $hide_from_docs
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
