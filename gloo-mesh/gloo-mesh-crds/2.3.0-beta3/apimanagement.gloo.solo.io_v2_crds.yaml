# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: c7a4b039c3e69d0
    crd.solo.io/version: 2.3.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: graphqlstitchedschemas.apimanagement.gloo.solo.io
spec:
  group: apimanagement.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: GraphQLStitchedSchema
    listKind: GraphQLStitchedSchemaList
    plural: graphqlstitchedschemas
    shortNames:
    - gqlss
    - gss
    singular: graphqlstitchedschema
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              options:
                properties:
                  enableIntrospection:
                    description: |-
                      Enable introspection queries on this GraphQL Stitched API.
                      Introspection queries are used by GraphQL developers to understand the schema of the GraphQL API and create
                      queries that are valid against the schema. Introspection is disabled by default, and should be disabled for
                      production environments.
                    type: boolean
                type: object
              subschemas:
                description: List of GraphQL Subschemas that compose this GraphQL
                  stitched schema.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - schema
                      - required:
                        - stitchedSchema
                  - required:
                    - schema
                  - required:
                    - stitchedSchema
                  properties:
                    schema:
                      description: Reference to a GraphQLSchema resource that contains
                        the configuration for this subschema.
                      properties:
                        clusterName:
                          description: name of the cluster in which the resource exists
                          type: string
                        name:
                          description: name of the resource being referenced
                          type: string
                        namespace:
                          description: namespace of the resource being referenced
                          type: string
                      type: object
                    stitchedSchema:
                      description: Reference to a GraphQLStitchedSchema resource that
                        contains the configuration for this subschema.
                      properties:
                        clusterName:
                          description: name of the cluster in which the resource exists
                          type: string
                        name:
                          description: name of the resource being referenced
                          type: string
                        namespace:
                          description: namespace of the resource being referenced
                          type: string
                      type: object
                    typeMerge:
                      additionalProperties:
                        properties:
                          args:
                            additionalProperties:
                              type: string
                            type: object
                          queryName:
                            description: specifies the root field from this subschema
                              used to request the local type
                            type: string
                          selectionSet:
                            description: |-
                              This specifies one or more key fields required from other services to perform this query.
                              Query planning will automatically resolve these fields from other subschemas in dependency order.
                              This is a graphql selection set specified as a string
                              e.g. '{ username }'
                            type: string
                        type: object
                      description: |-
                        Type merge configuration for this subschema. Let's say this subschema is a Users service schema
                             and provides the User type (with a query to fetch a user given the username)
                             ```gql
                             type Query {
                               GetUser(username: String): User
                             }
                             type User {
                               username: String
                               firstName: String
                               lastName: String
                             }
                             ```
                             and another subschema, e.g. Reviews schema, may have a partial User type:
                             ```gql
                             type Review {
                               author: User
                             }
                             type User {
                               username: String
                             }
                             ```
                             We want to provide the relevant information from this Users service schema,
                             so that another API that can give us a partial User type (with the username) will then
                             be able to have access to the full user type. With the correct type merging config under the Users subschema, e.g.:
                             ```yaml
                             type_merge:
                               User:
                                 selection_set: '{ username }'
                                 query_name: 'GetUser'
                                 args:
                                   username: username
                             ```
                             the stitched schema will now be able to provide the full user type to all types that require it. In this case,
                             we can now get the first name of an author from the Review.author field even though the Reviews schema doesn't
                             provide the full User type. Note: Type merging can be used for all GraphQL types except Mutations and Subscriptions.
                      type: object
                  type: object
                type: array
            type: object
          status:
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              ownerWorkspace:
                description: The name of the workspace that owns the GraphQL stitched
                  schema.
                properties:
                  workspace:
                    type: string
                type: object
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 732df59d318515ef
    crd.solo.io/version: 2.3.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: graphqlresolvermaps.apimanagement.gloo.solo.io
spec:
  group: apimanagement.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: GraphQLResolverMap
    listKind: GraphQLResolverMapList
    plural: graphqlresolvermaps
    shortNames:
    - grm
    - gqlrm
    singular: graphqlresolvermap
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              The GraphQLResolverMap Resource contains a mapping from types to fields to
              resolutions. For example, for a schema with type `Query` and field `GetName`
              ```graphql
               type Query {
                 GetName: String
               }
              ```
              you can configure a resolver for the `GetName` field as follows:
              ```yaml
              types:
                Query:
                  fields:
                    GetName:
                      <insert resolver config>
              ```
            properties:
              extensions:
                description: Extensions that apply to the resolvers in this ResolverMap.
                properties:
                  grpcSchemaSelector:
                    description: |-
                      Selects API Schema objects that describe a gRPC service.
                      This is used only in gRPC resolvers that are defined in this resolver map.
                      The gRPC resolver uses the protobuf descriptor to create gRPC requests to the upstream gRPC service.
                      Any non-gRPC API Schema that is selected here will be ignored.
                      gRPC schemas will be checked for validity, as well as package/message conflicts at configuration time and will
                      fail loudly if not valid.
                    properties:
                      cluster:
                        description: |-
                          Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                          matching objects across all clusters available in the parent object's workspace.
                        type: string
                      labels:
                        additionalProperties:
                          type: string
                        description: labels matching those of the object
                        type: object
                      name:
                        description: |-
                          Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                          matching objects with any name available in the parent object's workspace.
                        type: string
                      namespace:
                        description: |-
                          Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                          matching objects across all namespaces available in the parent object's workspace.
                        type: string
                      workspace:
                        description: |-
                          Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                          matching objects across all workspaces available in the parent object's workspace.
                        type: string
                    type: object
                type: object
              types:
                additionalProperties:
                  properties:
                    fields:
                      additionalProperties:
                        properties:
                          resolvers:
                            description: |-
                              List of resolvers.
                              Currently, only one the first resolver configuration will be respected and a warning will be thrown
                              if more than one resolver is in the list.
                            items:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - restResolver
                                  - required:
                                    - grpcResolver
                                  - properties:
                                      mockResolver:
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - properties:
                                                syncResponse:
                                                  oneOf:
                                                  - not:
                                                      anyOf:
                                                      - required:
                                                        - variable
                                                      - required:
                                                        - jq
                                                      - required:
                                                        - json
                                                  - required:
                                                    - variable
                                                  - required:
                                                    - jq
                                                  - required:
                                                    - json
                                              required:
                                              - syncResponse
                                            - required:
                                              - asyncResponse
                                            - required:
                                              - errorResponse
                                        - properties:
                                            syncResponse:
                                              oneOf:
                                              - not:
                                                  anyOf:
                                                  - required:
                                                    - variable
                                                  - required:
                                                    - jq
                                                  - required:
                                                    - json
                                              - required:
                                                - variable
                                              - required:
                                                - jq
                                              - required:
                                                - json
                                          required:
                                          - syncResponse
                                        - required:
                                          - asyncResponse
                                        - required:
                                          - errorResponse
                                    required:
                                    - mockResolver
                              - required:
                                - restResolver
                              - required:
                                - grpcResolver
                              - properties:
                                  mockResolver:
                                    oneOf:
                                    - not:
                                        anyOf:
                                        - properties:
                                            syncResponse:
                                              oneOf:
                                              - not:
                                                  anyOf:
                                                  - required:
                                                    - variable
                                                  - required:
                                                    - jq
                                                  - required:
                                                    - json
                                              - required:
                                                - variable
                                              - required:
                                                - jq
                                              - required:
                                                - json
                                          required:
                                          - syncResponse
                                        - required:
                                          - asyncResponse
                                        - required:
                                          - errorResponse
                                    - properties:
                                        syncResponse:
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - variable
                                              - required:
                                                - jq
                                              - required:
                                                - json
                                          - required:
                                            - variable
                                          - required:
                                            - jq
                                          - required:
                                            - json
                                      required:
                                      - syncResponse
                                    - required:
                                      - asyncResponse
                                    - required:
                                      - errorResponse
                                required:
                                - mockResolver
                              properties:
                                grpcResolver:
                                  description: Resolves fields by making a gRPC call
                                    to a gRPC destination.
                                  properties:
                                    destinations:
                                      description: |-
                                        Required: list of destinations which point to destinations containing
                                        a gRPC service. Must provide at least one destination.

                                        (Note: only the first destination will be used)
                                      items:
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - properties:
                                                function:
                                                  oneOf:
                                                  - not:
                                                      anyOf:
                                                      - required:
                                                        - awsLambda
                                                  - required:
                                                    - awsLambda
                                              required:
                                              - function
                                        - properties:
                                            function:
                                              oneOf:
                                              - not:
                                                  anyOf:
                                                  - required:
                                                    - awsLambda
                                              - required:
                                                - awsLambda
                                          required:
                                          - function
                                        properties:
                                          function:
                                            properties:
                                              awsLambda:
                                                properties:
                                                  invocationStyle:
                                                    description: |-
                                                      Can be either Sync or Async. See [AWS Invoke](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html)
                                                      for more details.
                                                    enum:
                                                    - SYNC
                                                    - ASYNC
                                                    type: string
                                                  requestTransformation:
                                                    enum:
                                                    - REQUEST_DEFAULT
                                                    - REQUEST_DISABLE
                                                    type: string
                                                  responseTransformation:
                                                    enum:
                                                    - RESPONSE_DEFAULT
                                                    - RESPONSE_DISABLE
                                                    type: string
                                                type: object
                                              logicalName:
                                                description: The logical name used
                                                  to call the specified Cloud Provider.
                                                type: string
                                            type: object
                                          kind:
                                            description: the kind of destination being
                                              selected. defaults to Kubernetes Service.
                                            enum:
                                            - SERVICE
                                            - VIRTUAL_DESTINATION
                                            - EXTERNAL_SERVICE
                                            - CLOUD_PROVIDER
                                            type: string
                                          port:
                                            description: the port on the destination
                                              object being targeted. required if the
                                              object provides more than one port.
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - number
                                                - required:
                                                  - name
                                            - required:
                                              - number
                                            - required:
                                              - name
                                            properties:
                                              name:
                                                description: the name of the port
                                                  on the destination objects being
                                                  targeted.
                                                type: string
                                              number:
                                                description: the number of the port
                                                  on the destination objects being
                                                  targeted.
                                                maximum: 4294967295
                                                minimum: 0
                                                type: integer
                                            type: object
                                          ref:
                                            description: reference to the destination
                                              object by its metadata
                                            properties:
                                              cluster:
                                                description: the cluster of the object.
                                                  if the field is omitted, Gloo Mesh
                                                  will use the same cluster as the
                                                  parent object containing this reference.
                                                type: string
                                              name:
                                                description: the name of the object
                                                type: string
                                              namespace:
                                                description: the namespace of the
                                                  object. if the field is omitted,
                                                  Gloo Mesh will use the same namespace
                                                  as the parent object containing
                                                  this reference.
                                                type: string
                                            type: object
                                          subset:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              select a subset of the destination's endpoints for routing based on their labels.
                                              Not applicable for a CloudProvider destination.
                                            type: object
                                          weight:
                                            description: |-
                                              Specify the proportion of traffic to be forwarded to this destination.
                                              Weights across all of the `destinations` must sum to 100.
                                              Weight is only relevant when used in the context of a route with multiple destinations.
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                        type: object
                                      type: array
                                    request:
                                      properties:
                                        authority:
                                          description: |-
                                            The :authority header to set on the gRPC request.
                                            If empty, the outgoing :authority header will be set to "envoy".
                                            This does not need to be set in most cases.
                                          nullable: true
                                          type: string
                                        method:
                                          description: The gRPC method to call.
                                          type: string
                                        outgoingMessage:
                                          description: |-
                                            The gRPC request body.
                                            The request body is a JSON object that will be marshalled into the gRPC request.
                                            The request body can be templated using variables from the `variables` field.
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - variable
                                              - required:
                                                - jq
                                              - required:
                                                - json
                                          - required:
                                            - variable
                                          - required:
                                            - jq
                                          - required:
                                            - json
                                          properties:
                                            jq:
                                              description: |-
                                                The [jq](https://stedolan.github.io/jq/manual/) filter which is used to provide a value.
                                                variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                                                For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                                                Jq filters must only result in one value, or an error will be sent back to the client.
                                                For example, for the input `[1,2,3]`, the jq filter '.[]' is not a valid jq filter as it results
                                                in multiple jq results. However, the jq filter '. &#124; join(",")' is valid as it results in one result: "1,2,3".
                                                Refer to the [jq manual](https://stedolan.github.io/jq/manual/) for jq syntax and tips.
                                              type: string
                                            json:
                                              description: |-
                                                Static JSON value.
                                                For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/value).
                                              x-kubernetes-preserve-unknown-fields: true
                                            variable:
                                              description: |-
                                                The name of a variable declared in the `variables` field. The value of the variable
                                                is returned with no transformation.
                                              type: string
                                          type: object
                                        requestMetadata:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            Static metadata to be added to the gRPC request.
                                            See https://grpc.io/docs/what-is-grpc/core-concepts/#metadata for more information.
                                          type: object
                                        service:
                                          description: The gRPC service to call.
                                          type: string
                                      type: object
                                    spanName:
                                      description: |-
                                        The span name for the upstream gRPC request, used for tracing.
                                        If left empty or not set, the request span name will be set to the upstream cluster name.
                                      nullable: true
                                      type: string
                                    timeout:
                                      description: |-
                                        Set the timeout of the HTTP request to the gRPC service (default 5s)
                                        For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/duration).
                                      type: string
                                  type: object
                                mockResolver:
                                  description: Resolves fields via a mocked response
                                    that is configured.
                                  properties:
                                    asyncResponse:
                                      description: |-
                                        The response to return for this field.
                                        The response is a JSON object that can be templated from the `variables` field.
                                        This response is returned to the GraphQL execution engine after a delay.
                                      properties:
                                        delay:
                                          description: |-
                                            The delay before the response is returned.
                                            For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/duration).
                                          type: string
                                        response:
                                          description: |-
                                            The response to return.
                                            The response is a JSON object that can be templated from the `variables` field.
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - variable
                                              - required:
                                                - jq
                                              - required:
                                                - json
                                          - required:
                                            - variable
                                          - required:
                                            - jq
                                          - required:
                                            - json
                                          properties:
                                            jq:
                                              description: |-
                                                The [jq](https://stedolan.github.io/jq/manual/) filter which is used to provide a value.
                                                variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                                                For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                                                Jq filters must only result in one value, or an error will be sent back to the client.
                                                For example, for the input `[1,2,3]`, the jq filter '.[]' is not a valid jq filter as it results
                                                in multiple jq results. However, the jq filter '. &#124; join(",")' is valid as it results in one result: "1,2,3".
                                                Refer to the [jq manual](https://stedolan.github.io/jq/manual/) for jq syntax and tips.
                                              type: string
                                            json:
                                              description: |-
                                                Static JSON value.
                                                For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/value).
                                              x-kubernetes-preserve-unknown-fields: true
                                            variable:
                                              description: |-
                                                The name of a variable declared in the `variables` field. The value of the variable
                                                is returned with no transformation.
                                              type: string
                                          type: object
                                      type: object
                                    errorResponse:
                                      description: An error response to return for
                                        this field.
                                      type: string
                                    syncResponse:
                                      description: |-
                                        The response to return for this field.
                                        The response is a JSON object that can be templated from the `variables` field.
                                        This response is immediately returned to the GraphQL execution engine.
                                      properties:
                                        jq:
                                          description: |-
                                            The [jq](https://stedolan.github.io/jq/manual/) filter which is used to provide a value.
                                            variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                                            For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                                            Jq filters must only result in one value, or an error will be sent back to the client.
                                            For example, for the input `[1,2,3]`, the jq filter '.[]' is not a valid jq filter as it results
                                            in multiple jq results. However, the jq filter '. &#124; join(",")' is valid as it results in one result: "1,2,3".
                                            Refer to the [jq manual](https://stedolan.github.io/jq/manual/) for jq syntax and tips.
                                          type: string
                                        json:
                                          description: |-
                                            Static JSON value.
                                            For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/value).
                                          x-kubernetes-preserve-unknown-fields: true
                                        variable:
                                          description: |-
                                            The name of a variable declared in the `variables` field. The value of the variable
                                            is returned with no transformation.
                                          type: string
                                      type: object
                                  type: object
                                resolverResultTransform:
                                  description: |-
                                    Use a transformation on extracted variables to transform the upstream REST response.
                                    By default, the transformation is empty and the destination response is left as is before
                                    being passed into the GraphQL execution engine.
                                  oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - variable
                                      - required:
                                        - jq
                                      - required:
                                        - json
                                  - required:
                                    - variable
                                  - required:
                                    - jq
                                  - required:
                                    - json
                                  properties:
                                    jq:
                                      description: |-
                                        The [jq](https://stedolan.github.io/jq/manual/) filter which is used to provide a value.
                                        variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                                        For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                                        Jq filters must only result in one value, or an error will be sent back to the client.
                                        For example, for the input `[1,2,3]`, the jq filter '.[]' is not a valid jq filter as it results
                                        in multiple jq results. However, the jq filter '. &#124; join(",")' is valid as it results in one result: "1,2,3".
                                        Refer to the [jq manual](https://stedolan.github.io/jq/manual/) for jq syntax and tips.
                                      type: string
                                    json:
                                      description: |-
                                        Static JSON value.
                                        For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/value).
                                      x-kubernetes-preserve-unknown-fields: true
                                    variable:
                                      description: |-
                                        The name of a variable declared in the `variables` field. The value of the variable
                                        is returned with no transformation.
                                      type: string
                                  type: object
                                restResolver:
                                  description: Resolves values by making a HTTP/2
                                    request to a HTTP/REST destination.
                                  properties:
                                    destinations:
                                      description: |-
                                        Required: list of destinations which point to destinations containing
                                        a RESTful service. Must provide at least one destination.

                                        (Note: only the first destination will be used)
                                      items:
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - properties:
                                                function:
                                                  oneOf:
                                                  - not:
                                                      anyOf:
                                                      - required:
                                                        - awsLambda
                                                  - required:
                                                    - awsLambda
                                              required:
                                              - function
                                        - properties:
                                            function:
                                              oneOf:
                                              - not:
                                                  anyOf:
                                                  - required:
                                                    - awsLambda
                                              - required:
                                                - awsLambda
                                          required:
                                          - function
                                        properties:
                                          function:
                                            properties:
                                              awsLambda:
                                                properties:
                                                  invocationStyle:
                                                    description: |-
                                                      Can be either Sync or Async. See [AWS Invoke](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html)
                                                      for more details.
                                                    enum:
                                                    - SYNC
                                                    - ASYNC
                                                    type: string
                                                  requestTransformation:
                                                    enum:
                                                    - REQUEST_DEFAULT
                                                    - REQUEST_DISABLE
                                                    type: string
                                                  responseTransformation:
                                                    enum:
                                                    - RESPONSE_DEFAULT
                                                    - RESPONSE_DISABLE
                                                    type: string
                                                type: object
                                              logicalName:
                                                description: The logical name used
                                                  to call the specified Cloud Provider.
                                                type: string
                                            type: object
                                          kind:
                                            description: the kind of destination being
                                              selected. defaults to Kubernetes Service.
                                            enum:
                                            - SERVICE
                                            - VIRTUAL_DESTINATION
                                            - EXTERNAL_SERVICE
                                            - CLOUD_PROVIDER
                                            type: string
                                          port:
                                            description: the port on the destination
                                              object being targeted. required if the
                                              object provides more than one port.
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - number
                                                - required:
                                                  - name
                                            - required:
                                              - number
                                            - required:
                                              - name
                                            properties:
                                              name:
                                                description: the name of the port
                                                  on the destination objects being
                                                  targeted.
                                                type: string
                                              number:
                                                description: the number of the port
                                                  on the destination objects being
                                                  targeted.
                                                maximum: 4294967295
                                                minimum: 0
                                                type: integer
                                            type: object
                                          ref:
                                            description: reference to the destination
                                              object by its metadata
                                            properties:
                                              cluster:
                                                description: the cluster of the object.
                                                  if the field is omitted, Gloo Mesh
                                                  will use the same cluster as the
                                                  parent object containing this reference.
                                                type: string
                                              name:
                                                description: the name of the object
                                                type: string
                                              namespace:
                                                description: the namespace of the
                                                  object. if the field is omitted,
                                                  Gloo Mesh will use the same namespace
                                                  as the parent object containing
                                                  this reference.
                                                type: string
                                            type: object
                                          subset:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              select a subset of the destination's endpoints for routing based on their labels.
                                              Not applicable for a CloudProvider destination.
                                            type: object
                                          weight:
                                            description: |-
                                              Specify the proportion of traffic to be forwarded to this destination.
                                              Weights across all of the `destinations` must sum to 100.
                                              Weight is only relevant when used in the context of a route with multiple destinations.
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                        type: object
                                      type: array
                                    request:
                                      description: |-
                                        Configuration to template a HTTP request to fetch JSON from a destination REST service.
                                        This includes configuration such as setting headers dynamically on the HTTP request, configuring query_params,
                                        and setting the body for the request to the destination.
                                      properties:
                                        body:
                                          description: |-
                                            Sets the outgoing body to the upstream REST destination.
                                            By default, the body is empty.
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - variable
                                              - required:
                                                - jq
                                              - required:
                                                - json
                                          - required:
                                            - variable
                                          - required:
                                            - jq
                                          - required:
                                            - json
                                          properties:
                                            jq:
                                              description: |-
                                                The [jq](https://stedolan.github.io/jq/manual/) filter which is used to provide a value.
                                                variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                                                For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                                                Jq filters must only result in one value, or an error will be sent back to the client.
                                                For example, for the input `[1,2,3]`, the jq filter '.[]' is not a valid jq filter as it results
                                                in multiple jq results. However, the jq filter '. &#124; join(",")' is valid as it results in one result: "1,2,3".
                                                Refer to the [jq manual](https://stedolan.github.io/jq/manual/) for jq syntax and tips.
                                              type: string
                                            json:
                                              description: |-
                                                Static JSON value.
                                                For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/value).
                                              x-kubernetes-preserve-unknown-fields: true
                                            variable:
                                              description: |-
                                                The name of a variable declared in the `variables` field. The value of the variable
                                                is returned with no transformation.
                                              type: string
                                          type: object
                                        headers:
                                          additionalProperties:
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - variable
                                                - required:
                                                  - jq
                                                - required:
                                                  - json
                                            - required:
                                              - variable
                                            - required:
                                              - jq
                                            - required:
                                              - json
                                            properties:
                                              jq:
                                                description: |-
                                                  The [jq](https://stedolan.github.io/jq/manual/) filter which is used to provide a value.
                                                  variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                                                  For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                                                  Jq filters must only result in one value, or an error will be sent back to the client.
                                                  For example, for the input `[1,2,3]`, the jq filter '.[]' is not a valid jq filter as it results
                                                  in multiple jq results. However, the jq filter '. &#124; join(",")' is valid as it results in one result: "1,2,3".
                                                  Refer to the [jq manual](https://stedolan.github.io/jq/manual/) for jq syntax and tips.
                                                type: string
                                              json:
                                                description: |-
                                                  Static JSON value.
                                                  For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/value).
                                                x-kubernetes-preserve-unknown-fields: true
                                              variable:
                                                description: |-
                                                  The name of a variable declared in the `variables` field. The value of the variable
                                                  is returned with no transformation.
                                                type: string
                                            type: object
                                          description: |-
                                            Sets the headers on the request to the REST destination.
                                            This includes setting HTTP :path header.
                                            This is a map of HTTP Header name to a transformation which determines the Header value.
                                            The transformation must result in a string value, or an error will be sent back to the client.
                                            By default, the :method header is set to GET. If `body` is set, then the :method is POST. This can be overridden
                                            by setting the :method header manually below.
                                          type: object
                                        queryParams:
                                          additionalProperties:
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - variable
                                                - required:
                                                  - jq
                                                - required:
                                                  - json
                                            - required:
                                              - variable
                                            - required:
                                              - jq
                                            - required:
                                              - json
                                            properties:
                                              jq:
                                                description: |-
                                                  The [jq](https://stedolan.github.io/jq/manual/) filter which is used to provide a value.
                                                  variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                                                  For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                                                  Jq filters must only result in one value, or an error will be sent back to the client.
                                                  For example, for the input `[1,2,3]`, the jq filter '.[]' is not a valid jq filter as it results
                                                  in multiple jq results. However, the jq filter '. &#124; join(",")' is valid as it results in one result: "1,2,3".
                                                  Refer to the [jq manual](https://stedolan.github.io/jq/manual/) for jq syntax and tips.
                                                type: string
                                              json:
                                                description: |-
                                                  Static JSON value.
                                                  For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/value).
                                                x-kubernetes-preserve-unknown-fields: true
                                              variable:
                                                description: |-
                                                  The name of a variable declared in the `variables` field. The value of the variable
                                                  is returned with no transformation.
                                                type: string
                                            type: object
                                          description: |-
                                            Sets the query parameters on the request to the REST destination.
                                            The transformation must result in a string value, or an error will be sent back to the client.
                                          type: object
                                      type: object
                                    spanName:
                                      description: |-
                                        The span name for the upstream REST request, used for tracing.
                                        If left empty or not set, the request span name will be set to the upstream cluster name.
                                      nullable: true
                                      type: string
                                    timeout:
                                      description: |-
                                        Set the timeout of the HTTP request to the REST service (default 5s)
                                        For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/duration).
                                      type: string
                                    variables:
                                      additionalProperties:
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - responseHeader
                                        - required:
                                          - responseHeader
                                        properties:
                                          responseHeader:
                                            description: |-
                                              Only available on resolver result transformations
                                              Extract the value from the GraphQL HTTP response header. The extracted value is a string.
                                              If this Extraction is used in a place where response headers are not available, an error
                                              will be thrown during configuration time.
                                            type: string
                                        type: object
                                      description: |-
                                        Variables that can be used in this field's response transform.
                                        The key is the name of the variable, which is directly used in the transformation.
                                        The value defines where the variable value is extracted from on the GraphQL REST response.
                                      type: object
                                  type: object
                              type: object
                            type: array
                          statPrefix:
                            description: |-
                              The stats prefix which will be used for this resolver.
                              If empty, will generate a stats prefix ${RESOLVER_NAME}
                            nullable: true
                            type: string
                          variables:
                            additionalProperties:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - requestHeader
                                  - required:
                                    - dynamicMetadata
                                  - required:
                                    - graphqlParent
                                  - required:
                                    - graphqlArg
                                  - required:
                                    - resolverResult
                                  - required:
                                    - json
                              - required:
                                - requestHeader
                              - required:
                                - dynamicMetadata
                              - required:
                                - graphqlParent
                              - required:
                                - graphqlArg
                              - required:
                                - resolverResult
                              - required:
                                - json
                              properties:
                                dynamicMetadata:
                                  description: Extract the value from envoy dynamic
                                    metadata. The extracted value is an object.
                                  properties:
                                    key:
                                      description: |-
                                        The key under the envoy dynamic metadata namespace that the data lives under.
                                        If the key doesn't exist in the namespace, the extraction yields null
                                      type: string
                                    metadataNamespace:
                                      description: |-
                                        The envoy dynamic metadata namespace that the data lives in. If the namespace doesn't exist in the
                                        metadata, the extraction yields null
                                      type: string
                                  type: object
                                graphqlArg:
                                  description: |-
                                    Assigns the variable to the GraphQL Argument with this name.
                                    If this name doesn't exist, the variable is `null`
                                  type: string
                                graphqlParent:
                                  description: |-
                                    Assigns the variable to the parent object
                                    For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/empty).
                                  maxProperties: 0
                                  type: object
                                json:
                                  description: |-
                                    Assigns the variable to a JSON value specified here
                                    For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/value).
                                  x-kubernetes-preserve-unknown-fields: true
                                requestHeader:
                                  description: |-
                                    Extract the value from the GraphQL HTTP request header. The extracted value is a string.
                                    If the header doesn't exist, an empty string will be used.
                                  type: string
                                resolverResult:
                                  description: |-
                                    Assigns the variable to the GraphQL resolver result.
                                    If this Extraction is used in a place where the resolver result is not available, an error
                                    will be thrown during configuration time.
                                    For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/empty).
                                  maxProperties: 0
                                  type: object
                              type: object
                            description: |-
                              Variables that can be used as a part of transformations for this field's resolution.
                              The key is the name of the variable, which is directly used in the transformation.
                              The value defines where the variable value is extracted from on the GraphQL request.
                            type: object
                        type: object
                      description: |-
                        Map of GraphQL fields for the type to resolutions.
                        The key must match the GraphQL field name and is case-sensitive.
                        Fields that don't have resolvers will use the GraphQL default resolver,
                        which returns the field in the parent object with the same name as the GraphQL field.
                      type: object
                  type: object
                description: |-
                  Map of GraphQL types to field resolutions.
                  The key must match the GraphQL type name and is case-sensitive.
                  Every field under GraphQL root types (Query, Mutation) must have a resolver defined.
                type: object
            type: object
          status:
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              ownerWorkspace:
                description: The name of the workspace that owns the GraphQL resolver
                  map.
                properties:
                  workspace:
                    type: string
                type: object
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: fd2626f242833abd
    crd.solo.io/version: 2.3.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: graphqlschemas.apimanagement.gloo.solo.io
spec:
  group: apimanagement.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: GraphQLSchema
    listKind: GraphQLSchemaList
    plural: graphqlschemas
    shortNames:
    - gqls
    singular: graphqlschema
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            oneOf:
            - not:
                anyOf:
                - required:
                  - proxied
                - required:
                  - resolved
            - required:
              - proxied
            - required:
              - resolved
            properties:
              proxied:
                description: |-
                  Configuration to delegate resolving this GraphQL request to an external GraphQL server, which can be
                  another GlooGraphQL instance or another instance of a GraphQL server. The external GraphQL server must
                  be compliant with the [June 2018 GraphQL specification](https://spec.graphql.org/June2018/).
                properties:
                  graphqlServers:
                    description: |-
                      List of destinations that can server GraphQL requests. The external GraphQL server must
                      be compliant with the [June 2018 GraphQL specification](https://spec.graphql.org/June2018).
                      Though this is a list, only the first referenced destination will be used until fail-over and load balancing
                      is supported between multiple GraphQL destinations.
                    items:
                      oneOf:
                      - not:
                          anyOf:
                          - properties:
                              function:
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - awsLambda
                                - required:
                                  - awsLambda
                            required:
                            - function
                      - properties:
                          function:
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - awsLambda
                            - required:
                              - awsLambda
                        required:
                        - function
                      properties:
                        function:
                          properties:
                            awsLambda:
                              properties:
                                invocationStyle:
                                  description: |-
                                    Can be either Sync or Async. See [AWS Invoke](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html)
                                    for more details.
                                  enum:
                                  - SYNC
                                  - ASYNC
                                  type: string
                                requestTransformation:
                                  enum:
                                  - REQUEST_DEFAULT
                                  - REQUEST_DISABLE
                                  type: string
                                responseTransformation:
                                  enum:
                                  - RESPONSE_DEFAULT
                                  - RESPONSE_DISABLE
                                  type: string
                              type: object
                            logicalName:
                              description: The logical name used to call the specified
                                Cloud Provider.
                              type: string
                          type: object
                        kind:
                          description: the kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          - CLOUD_PROVIDER
                          type: string
                        port:
                          description: the port on the destination object being targeted.
                            required if the object provides more than one port.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        ref:
                          description: reference to the destination object by its
                            metadata
                          properties:
                            cluster:
                              description: the cluster of the object. if the field
                                is omitted, Gloo Mesh will use the same cluster as
                                the parent object containing this reference.
                              type: string
                            name:
                              description: the name of the object
                              type: string
                            namespace:
                              description: the namespace of the object. if the field
                                is omitted, Gloo Mesh will use the same namespace
                                as the parent object containing this reference.
                              type: string
                          type: object
                        subset:
                          additionalProperties:
                            type: string
                          description: |-
                            select a subset of the destination's endpoints for routing based on their labels.
                            Not applicable for a CloudProvider destination.
                          type: object
                        weight:
                          description: |-
                            Specify the proportion of traffic to be forwarded to this destination.
                            Weights across all of the `destinations` must sum to 100.
                            Weight is only relevant when used in the context of a route with multiple destinations.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    type: array
                  headers:
                    additionalProperties:
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - variable
                          - required:
                            - jq
                          - required:
                            - json
                      - required:
                        - variable
                      - required:
                        - jq
                      - required:
                        - json
                      properties:
                        jq:
                          description: |-
                            The [jq](https://stedolan.github.io/jq/manual/) filter which is used to provide a value.
                            variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                            For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                            Jq filters must only result in one value, or an error will be sent back to the client.
                            For example, for the input `[1,2,3]`, the jq filter '.[]' is not a valid jq filter as it results
                            in multiple jq results. However, the jq filter '. &#124; join(",")' is valid as it results in one result: "1,2,3".
                            Refer to the [jq manual](https://stedolan.github.io/jq/manual/) for jq syntax and tips.
                          type: string
                        json:
                          description: |-
                            Static JSON value.
                            For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/value).
                          x-kubernetes-preserve-unknown-fields: true
                        variable:
                          description: |-
                            The name of a variable declared in the `variables` field. The value of the variable
                            is returned with no transformation.
                          type: string
                      type: object
                    description: |-
                      map of header name to a transformation on extracted variables which are declared
                      in the `variables` field.
                      The transformation must result in a string value, or an error will be sent back to the client.
                    type: object
                  options:
                    properties:
                      allowIntrospection:
                        description: |-
                          Enable introspection queries on the GraphQL API served by this GraphQLSchema resource.
                          Introspection queries are used by GraphQL developers to understand the schema of the GraphQL API and create
                          queries that are valid against the schema. This option allows for introspection queries to be sent to the
                          proxied GraphQL server. Introspection is disabled by default and introspection queries will be responded with errors
                          by the proxy. This should be disabled for production environments.
                        type: boolean
                    type: object
                  queryParams:
                    additionalProperties:
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - variable
                          - required:
                            - jq
                          - required:
                            - json
                      - required:
                        - variable
                      - required:
                        - jq
                      - required:
                        - json
                      properties:
                        jq:
                          description: |-
                            The [jq](https://stedolan.github.io/jq/manual/) filter which is used to provide a value.
                            variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                            For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                            Jq filters must only result in one value, or an error will be sent back to the client.
                            For example, for the input `[1,2,3]`, the jq filter '.[]' is not a valid jq filter as it results
                            in multiple jq results. However, the jq filter '. &#124; join(",")' is valid as it results in one result: "1,2,3".
                            Refer to the [jq manual](https://stedolan.github.io/jq/manual/) for jq syntax and tips.
                          type: string
                        json:
                          description: |-
                            Static JSON value.
                            For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/value).
                          x-kubernetes-preserve-unknown-fields: true
                        variable:
                          description: |-
                            The name of a variable declared in the `variables` field. The value of the variable
                            is returned with no transformation.
                          type: string
                      type: object
                    description: |-
                      map of query parameter name to a transformation on extracted variables which are declared
                      in the `variables` field.
                      The transformation must result in a string value, or an error will be sent back to the client.
                    type: object
                  spanName:
                    description: |-
                      The span name for the remote GraphQL request, used for tracing.
                      If left empty or not set, the request span name will be set to the upstream cluster name.
                    type: string
                  timeout:
                    description: |-
                      Set the timeout of the HTTP request to the REST service (default 5s)
                      For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/duration).
                    type: string
                  variables:
                    additionalProperties:
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - dynamicMetadata
                          - required:
                            - requestHeader
                          - required:
                            - json
                      - required:
                        - dynamicMetadata
                      - required:
                        - requestHeader
                      - required:
                        - json
                      properties:
                        dynamicMetadata:
                          description: Extract the value from envoy dynamic metadata.
                            The extracted value is an object.
                          properties:
                            key:
                              description: |-
                                The key under the envoy dynamic metadata namespace that the data lives under.
                                If the key doesn't exist in the namespace, the extraction yields null
                              type: string
                            metadataNamespace:
                              description: |-
                                The envoy dynamic metadata namespace that the data lives in. If the namespace doesn't exist in the
                                metadata, the extraction yields null
                              type: string
                          type: object
                        json:
                          description: |-
                            Assigns the variable to a JSON value specified here.
                            For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/value).
                          x-kubernetes-preserve-unknown-fields: true
                        requestHeader:
                          description: |-
                            Extract the value from the GraphQL HTTP request header. The extracted value is a string.
                            If the header doesn't exist, an empty string will be used.
                          type: string
                      type: object
                    description: |-
                      Declare variables that are used in variable transformations in the fields below for the GraphQL request to a remote server.
                      The keys to this map are the name of the variables. See the variable transformations specifically
                      for how to reference these variables.
                    type: object
                type: object
              resolved:
                description: |-
                  List of references to GraphQLResolverMap resources. GraphQLResolverMaps
                  contain a mapping from GraphQL fields to resolver configuration, so that those fields can be resolved
                  locally by this GraphQL-envoy instance.
                  Order of the references listed below does matter as resolver maps listed first
                  will be given priority over later ones when tie-breaking field resolver configurations.
                properties:
                  options:
                    properties:
                      enableIntrospection:
                        description: |-
                          Enable introspection queries on the GraphQL API served by this GraphQLSchema resource.
                          Introspection queries are used by GraphQL developers to understand the schema of the GraphQL API and create
                          queries that are valid against the schema. Introspection is disabled by default, and should be disabled for
                          production environments.
                        type: boolean
                      maxDepth:
                        description: |-
                          Max GraphQL operation (query/mutation/subscription) depth. This sets a limitation on the max nesting on a query that runs against this schema.
                          any GraphQL operation that runs past the `max_depth` will add an error message to the response and will return as `null`.
                          If not configured, or the value is 0, the query depth will be unbounded.
                          For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/u-int32-value).
                        maximum: 4294967295
                        minimum: 0
                        nullable: true
                        type: integer
                    type: object
                  resolverMapRefs:
                    description: |-
                      List of references to GraphQLResolverMap resources. GraphQLResolverMaps
                      contain a mapping from GraphQL fields to resolver configuration, so that those fields can be resolved
                      locally by this GraphQL-envoy instance.
                      Order of the references listed below does matter as resolver maps listed first
                      will be given priority over later ones when tie-breaking field resolver configurations.
                    items:
                      properties:
                        clusterName:
                          description: name of the cluster in which the resource exists
                          type: string
                        name:
                          description: name of the resource being referenced
                          type: string
                        namespace:
                          description: namespace of the resource being referenced
                          type: string
                      type: object
                    type: array
                type: object
              schemaRef:
                description: |-
                  Required: Reference to the ApiSchema object which is of type GraphQL schema, which contains the [GraphQL SDL](https://graphql.org/learn/schema/)
                  defining this GraphQL schema.
                properties:
                  clusterName:
                    description: name of the cluster in which the resource exists
                    type: string
                  name:
                    description: name of the resource being referenced
                    type: string
                  namespace:
                    description: namespace of the resource being referenced
                    type: string
                type: object
            type: object
          status:
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              ownerWorkspace:
                description: The name of the workspace that owns the GraphQL schema.
                properties:
                  workspace:
                    type: string
                type: object
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: f9d5921d425ff516
    crd.solo.io/version: 2.3.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: apidocs.apimanagement.gloo.solo.io
spec:
  group: apimanagement.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ApiDoc
    listKind: ApiDocList
    plural: apidocs
    shortNames:
    - ad
    singular: apidoc
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              The ApiDoc resource represents an the schema of an API
              served by a Destination (Service, ExternalService).
              ApiDocs are typically created by Gloo Mesh Discovery running on the agent.
              They can also be created manually by users.
              The ApiDoc type is used to represent different types of API schema specification languages:
              - OpenAPI
              - gRPC
              - GraphQL
            oneOf:
            - not:
                anyOf:
                - required:
                  - openapi
                - required:
                  - grpc
                - required:
                  - graphql
            - required:
              - openapi
            - required:
              - grpc
            - required:
              - graphql
            properties:
              graphql:
                description: GraphQL schema
                properties:
                  schemaDefinition:
                    description: |-
                      Required: GraphQL Schema Definition. Root-level Query and Mutation types are supported, while the Subscription type is not
                      yet supported.
                    type: string
                type: object
              grpc:
                description: gRPC schema
                properties:
                  descriptors:
                    description: |-
                      Protobuf Descriptors that represent the gRPC services provided by the API.
                      this is a serialized base64-encoded google.protobuf.FileDescriptorSet
                    format: binary
                    type: string
                type: object
              openapi:
                description: OpenAPI schema
                properties:
                  inlineString:
                    description: inline string containing the OpenAPI schema
                    type: string
                type: object
              servedBy:
                description: |-
                  the destinations that serve this API, if any.
                  When manually creating an ApiDoc for a service that serves an OpenAPI or gRPC schema the destination selector
                  field is required.
                  A stitched OpenAPI schema for a set of routes exposed by a route table
                  will have a reference to its corresponding route table.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - destinationSelector
                      - required:
                        - routeTable
                  - required:
                    - destinationSelector
                  - required:
                    - routeTable
                  properties:
                    destinationSelector:
                      properties:
                        kind:
                          description: the kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            the port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        selector:
                          description: selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                    routeTable:
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          status:
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              ownerWorkspace:
                description: The name of the workspace that owns the GraphQL API schema.
                properties:
                  workspace:
                    type: string
                type: object
              servingDestinations:
                description: A list of destinations serving the API.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - properties:
                          function:
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - awsLambda
                            - required:
                              - awsLambda
                        required:
                        - function
                  - properties:
                      function:
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - awsLambda
                        - required:
                          - awsLambda
                    required:
                    - function
                  properties:
                    function:
                      properties:
                        awsLambda:
                          properties:
                            invocationStyle:
                              description: |-
                                Can be either Sync or Async. See [AWS Invoke](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html)
                                for more details.
                              enum:
                              - SYNC
                              - ASYNC
                              type: string
                            requestTransformation:
                              enum:
                              - REQUEST_DEFAULT
                              - REQUEST_DISABLE
                              type: string
                            responseTransformation:
                              enum:
                              - RESPONSE_DEFAULT
                              - RESPONSE_DISABLE
                              type: string
                          type: object
                        logicalName:
                          description: The logical name used to call the specified
                            Cloud Provider.
                          type: string
                      type: object
                    kind:
                      description: the kind of destination being selected. defaults
                        to Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      - CLOUD_PROVIDER
                      type: string
                    port:
                      description: the port on the destination object being targeted.
                        required if the object provides more than one port.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    ref:
                      description: reference to the destination object by its metadata
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                    subset:
                      additionalProperties:
                        type: string
                      description: |-
                        select a subset of the destination's endpoints for routing based on their labels.
                        Not applicable for a CloudProvider destination.
                      type: object
                    weight:
                      description: |-
                        Specify the proportion of traffic to be forwarded to this destination.
                        Weights across all of the `destinations` must sum to 100.
                        Weight is only relevant when used in the context of a route with multiple destinations.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 514c435f75619134
    crd.solo.io/version: 2.3.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: portals.apimanagement.gloo.solo.io
spec:
  group: apimanagement.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: Portal
    listKind: PortalList
    plural: portals
    shortNames:
    - portal
    singular: portal
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              The Portal resource configures a developer portal that you can use to securely expose your APIs to end users.
              Before you create the Portal, you bundle the APIs that you want to expose into a route table.
              Then, you prepare a usage plan to control access to your APIs
              by applying rate limiting and external auth policies to the routes in the route table.
              For more information, see the [Portal docs](https://docs.solo.io/gloo-gateway/main/portal/).

              The following examples show a Portal resource that refers to usage plans
              that are named in the rate limit server config's descriptors, as well as a corresponding
              `RateLimitPolicy` and `ExternalAuthPolicy` that apply to a route in a route table.

              ```yaml
              apiVersion: apimanagement.gloo.solo.io/v2
              kind: Portal
                 metadata:
                   name: public-portal
                   namespace: gloo-mesh-addons
              spec:
                 portalBackendSelectors:
                   - selector:
                       labels:
                         app: gloo-mesh-portal-server
                 usagePlans:
                   - name: bronze
                     displayName: "Bronze Plan"
                     description: "A basic usage plan"
                   - name: silver
                     description: "A better usage plan"
                   - name: gold
                     description: "The best usage plan!"
                 apis:
                   - name: productpage
                       namespace: bookinfo
                       cluster: cluster-1
                   - labels:
                         app: reviews
              ```

              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: RateLimitServerConfig
                 metadata:
                   name: usage-plans
                   namespace: gloo-mesh-addons
              spec:
                 destinationServers: [] # omitted, server refs
                 raw:
                   descriptors:
                     - key: usagePlan
                       value: bronze
                       descriptors:
                         - key: userId
                           rateLimit:
                             requestsPerUnit: 50
                             unit: MINUTE
                     - key: usagePlan
                       value: silver
                       descriptors:
                         - key: userId
                           rateLimit:
                             requestsPerUnit: 200
                             unit: MINUTE
                      - key: usagePlan
                        value: gold
                        descriptors:
                          - key: userId
                            rateLimit:
                              requestsPerUnit: 1000
                              unit: MINUTE
              ```

              ```yaml
              apiVersion: security.policy.gloo.solo.io/v2
              kind: ExtAuthPolicy
              metadata:
                name: petstore-apiauth
                namespace: petstore
              spec:
                applyToRoutes:
                  - route:
                      labels:
                         route: pets
                config:
                  server:
                    name: ext-auth-server
                    namespace: gloo-mesh-addons
                    cluster: cluster-1
                  glooAuth:
                    configs:
                      - apiKeyAuth:
                          headersFromMetadata:
                            x-solo-plan:
                              name: plan
                              required: true
                          k8sSecretApikeyStorage:
                            labelSelector:
                              auth: api-key
              ```

              ```yaml
              apiVersion: trafficcontrol.policy.gloo.solo.io/v2
              kind: RateLimitPolicy
              metadata:
                name: pets-rate-limit
                namespace: petstore
              spec:
                applyToRoutes:
                  - route:
                      labels:
                         route: pets
                config:
                  ratelimitServerConfig:
                    name: usage-plans
                    namespace: gloo-mesh-addons
                    cluster: cluster-1
                  raw:
                    rateLimits:
                      - actions:
                          - requestHeaders:
                              descriptorKey: usagePlan
                              headerName: x-solo-plan
                          - metadata:
                              descriptorKey: userId
                              metadataKey:
                                key: envoy.filters.http.ext_authz
                                path:
                                  - key: userId
              ```
            properties:
              apis:
                description: |-
                  A list of route tables with routes to the APIs you want the developer portal to expose.
                  The route table might also have 'portalMetadata' key-value fields that you want to display in the developer portal for end users.
                items:
                  properties:
                    cluster:
                      description: |-
                        Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                        matching objects across all clusters available in the parent object's workspace.
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: labels matching those of the object
                      type: object
                    name:
                      description: |-
                        Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                        matching objects with any name available in the parent object's workspace.
                      type: string
                    namespace:
                      description: |-
                        Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                        matching objects across all namespaces available in the parent object's workspace.
                      type: string
                    workspace:
                      description: |-
                        Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                        matching objects across all workspaces available in the parent object's workspace.
                      type: string
                  type: object
                type: array
              domains:
                description: |-
                  The domains on which this Portal will be served. The Host header received by the
                  Portal Web App will be matched to one of these domains in order to determine which Portal will be served.

                  If you are using the Gateway through which you are exposing the Portal
                  is listening on a port other than 80/443, you should include the port as part of the
                  domain string, e.g. "portal.solo.io:8443".

                  To prevent undefined behavior, creating a Portal whose domain conflicts with
                  an existing Portal will result in the Portal resource being placed into an 'Invalid' state.
                items:
                  type: string
                type: array
              portalBackendSelectors:
                description: The workloads where an existing portal backend is running.
                items:
                  properties:
                    kind:
                      description: The kind of workload being selected. Defaults to
                        Kube.
                      enum:
                      - KUBE
                      - VM
                      type: string
                    port:
                      description: |-
                        The port to select on the selected workloads.
                        Only applies to policies which select specific workload ports, such as the WasmDeploymentPolicy.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    selector:
                      description: Selector used to match Workload objects by their
                        metadata.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              usagePlans:
                description: The usage plans to control access to the APIs that the
                  developer portal exposes.
                items:
                  properties:
                    description:
                      description: |-
                        Optional description for the usage plan to show end users in the developer portal.
                        You might include information about how to get the plan or what the plan includes and excludes.
                      type: string
                    displayName:
                      description: Optional display name for the usage plan to show
                        end users in the developer portal.
                      type: string
                    name:
                      description: Match the names of the usage plans with the descriptors
                        that you defined in the rate limit server config.
                      type: string
                  type: object
                type: array
              visibility:
                description: |-
                  Settings for the controlling the visibility of the Portal's contents.
                  Default visibility for content in the Portal is private.
                  When a Portal is public, individual APIs can be made private, by specifying the labels for private APIs
                  and applying said labels to the route tables that need to be private.
                properties:
                  privateAPILabels:
                    additionalProperties:
                      type: string
                    description: |-
                      Custom labels for private APIs. Apply these labels to route tables that need to be private.
                      Has no effect if the public field is set to false in which case all APIs are private.
                    type: object
                  public:
                    description: |-
                      If true, all the APIs published in this portal are going to be public (i.e. visible to unauthenticated users);
                      individual APIs can still be made private using the privateAPILabels field.
                      Defaults to false, in which case the privateAPILabels field will have not effect.
                    type: boolean
                type: object
            type: object
          status:
            properties:
              common:
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state
                          of the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              extAuthPolicyCount:
                description: The number of ext-auth policies that this portal selects
                  with the usage plans that are defined in the portal resource.
                maximum: 4294967295
                minimum: 0
                type: integer
              ownerWorkspace:
                type: string
              portalBackendCount:
                description: The number of portal backends that are selected by this
                  portal.
                maximum: 4294967295
                minimum: 0
                type: integer
              rateLimitPolicyCount:
                description: The number of rate limit policies that this portal selects
                  with the usage plans that are defined in the portal resource.
                maximum: 4294967295
                minimum: 0
                type: integer
              routeTablesCount:
                description: The number of route tables that are selected by this
                  portal.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 3000e1bedee74f7d
    crd.solo.io/version: 2.3.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: portalgroups.apimanagement.gloo.solo.io
spec:
  group: apimanagement.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: PortalGroup
    listKind: PortalGroupList
    plural: portalgroups
    shortNames:
    - portalgroup
    singular: portalgroup
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              A `PortalGroup` defines what APIs a group of users can view in the portal, and what usage plans they can manage API keys for.

              A `PortalGroup` consists of a set of permissions defined for the group defined in `AccessLevel`, and a set of claims that
              is used to determine whether a user belongs to this group.

              Below is an example of a `PortalGroup` that defines a group of users that can view the APIs (RouteTables) with the `customers-group: true` label,
              and manage API keys for the `bronze`, `silver`, and `gold` usage plans for said APIs.
              A user belongs to this group if they have the following claims in their JWT:
              ```json
              { "type": "customers", "region": "us-east-1" }
              ```

              ```yaml
              apiVersion: apimanagement.gloo.solo.io/v2
              kind: PortalGroup
              metadata:
                name: customers-group
                namespace: gloo-mesh-addons
              labels:
                portal: sample-bank-portal
              spec:
                name: customers-group
                description: a group for users accessing the customers APIs
                membership:
                  - claims:
                      - key: type
                        value: customers
                      - key: region
                        value: us-east-1
                accessLevel:
                  apis:
                  - routeTable:
                      labels:
                        customers-group: true
                  usagePlans:
                  - name: bronze
                  - name: silver
                  - name: gold
              ```
            properties:
              accessLevel:
                description: Settings that control the list of APIs that this group
                  can view, and the usage plans that this group can manage API keys
                  for.
                properties:
                  apis:
                    description: |-
                      The APIs that we want to allow this group to view in the portal. An API consists of all routes exposed by a route table,
                      so the apis field is a list of route table selectors.
                    items:
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                    type: array
                  usagePlans:
                    description: |-
                      The names of usage plans that we want to allow this group to manage API keys for. Note that if your usage plan is applied across
                      different route tables, granting the ability to manage API keys for a usage plan in a group will allow the created API keys
                      to also be used across all route tables that the usage plan applies to.
                    items:
                      type: string
                    type: array
                type: object
              description:
                description: The description of the group.
                type: string
              membership:
                description: |-
                  A list of `Membership` criteria that defines the claims that are used to determine whether a user belongs to this group.
                  A user is considered to be a member of this group if they have claims that match all the claims in any `Membership` criteria in this list.
                  For example, a user is considered to be a member of this group if they have defined the following list of membership criteria in their `PortalGroup`:
                  ```yaml
                  ...
                   membership:
                     - claims:
                         - key: type
                           value: customers
                         - key: region
                           value: us-east-1
                     - claims:
                         - key: type
                           value: customers
                         - key: region
                           value: us-west-1
                  ```
                  and the user has the following claims in their idToken:
                  ```json
                  { "type": "customers", "region": "us-east-1" } or { "type": "customers", "region": "us-west-1" }
                  ```
                  claims within a `Membership` criteria is an AND operation, and the list of `Membership` criteria is an OR operation.
                items:
                  properties:
                    claims:
                      description: |-
                        A list of claims that is used to determine whether a user belongs to this group.
                        A user is considered to be a member of this group if their idToken has claims that match all the claims in this list.
                      items:
                        properties:
                          key:
                            description: The key of the claim. For example, `customers`
                              or `region`. This is the key that we will use to match
                              against the claims in the idToken.
                            type: string
                          value:
                            description: The value of the claim.
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
              name:
                description: The name of the group.
                type: string
            type: object
          status:
            description: $hide_from_docs
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
