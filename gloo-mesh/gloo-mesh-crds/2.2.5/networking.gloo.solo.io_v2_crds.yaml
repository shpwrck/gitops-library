# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: fd413356a433141
    crd.solo.io/version: 2.2.5
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: cloudproviders.networking.gloo.solo.io
spec:
  group: networking.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: CloudProvider
    listKind: CloudProviderList
    plural: cloudproviders
    shortNames:
    - cp
    singular: cloudprovider
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              A CloudProvider is a representation of a cloud provider, and allows you to specify the configuration used to communicate
              with that cloud provider, as well as how to discover the set of backing functionality associated with that CloudProvider.
            oneOf:
            - not:
                anyOf:
                - required:
                  - aws
            - required:
              - aws
            properties:
              aws:
                description: AWS cloud provider configuration.
                properties:
                  accountId:
                    description: AWS account ID
                    type: string
                  lambda:
                    description: Lambda configuration
                    properties:
                      invokeRoleName:
                        description: |-
                          Name of the IAM Role to assume when calling the specified Cloud Function, associated with the account ID
                          and region specified on the CloudProvider. If not specified, the IAM Role specified on the gateway will be used
                          unless referencing an imported CloudProvider. If importing a CloudProvider,this field must be specified. A default
                          invokeRole can be put on the routeTable by using the gloo.solo.io/defaultInvokeRole annotation.
                        type: string
                    type: object
                  region:
                    description: AWS region
                    type: string
                  stsEndpoint:
                    description: STS endpoint to reach out to for AWS credentials
                    type: string
                type: object
            type: object
          status:
            description: reflects the status of the Cloud Provider
            properties:
              childCloudResources:
                description: CloudResources that back this CloudProvider
                items:
                  properties:
                    cluster:
                      description: the cluster of the object. if the field is omitted,
                        Gloo Mesh will use the same cluster as the parent object containing
                        this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. if the field is omitted,
                        Gloo Mesh will use the same namespace as the parent object
                        containing this reference.
                      type: string
                  type: object
                type: array
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              numRoutableFunctions:
                description: Total number of routable functions provided by the attached
                  CloudResources
                maximum: 4294967295
                minimum: 0
                type: integer
              ownerWorkspace:
                description: Name of Workspace that owns CloudProvider
                properties:
                  workspace:
                    type: string
                type: object
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 372b9ed55cece794
    crd.solo.io/version: 2.2.5
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: cloudresources.networking.gloo.solo.io
spec:
  group: networking.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: CloudResources
    listKind: CloudResourcesList
    plural: cloudresources
    shortNames:
    - cr
    singular: cloudresources
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              CloudResources are units of functionality that back a referenced CloudProvider resource. These bits of functionality
              can be referenced in the route table to route to the corresponding backend service.
            properties:
              lambda:
                description: The list of lambda functions Gloo Mesh can route to for
                  the AWS provider.
                items:
                  properties:
                    lambdaFunctionName:
                      description: The Name of the Lambda Function as it appears in
                        the AWS Lambda Portal
                      type: string
                    logicalName:
                      description: |-
                        The logical name Gloo Mesh should associate with this function. If left empty, it will default to
                        lambda_function_name+qualifier.
                      type: string
                    qualifier:
                      description: |-
                        The Qualifier for the Lambda Function. Qualifiers act as a kind of version
                        for Lambda Functions. See https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html for more info.
                      type: string
                  type: object
                type: array
              provider:
                description: |-
                  The name of the cloud provider that this configuration references. Must live in the same namespace as the
                  CloudResources.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 21f1da155ffb40a3
    crd.solo.io/version: 2.2.5
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: externalservices.networking.gloo.solo.io
spec:
  group: networking.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ExternalService
    listKind: ExternalServiceList
    plural: externalservices
    shortNames:
    - es
    singular: externalservice
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              ExternalService defines a destination for routing which exist outside the mesh.
              This could for example be a web API or a set of virtual machines that are not running in Kubernetes.
              When an ExternalService is defined for a given workspace, it can be used as a
              Destination in Routes, as well as called directly via its specified hostname.
              Resolution of the IP addresses for external services can be done via DNS
              or provided statically using the ExternalEndpoint object.
            properties:
              addresses:
                description: |-
                  (mutually exclusive with hosts): The List of ipv4 or ipv6 addresses which will be associated to this service. Can be CIDR prefixes.
                  These addresses must be unique among all ExternalServices within a workspace.
                items:
                  type: string
                type: array
              hosts:
                description: |-
                  (mutually exclusive with addresses): The List of hostnames which will resolve to this service.
                  These hosts must be unique among all ExternalServices and VirtualHosts within a workspace.
                  Both FQDN and wildcard prefix domains are supported.
                  TLS origination to ExternalServices is supported with use of the ClientsideTls property.
                items:
                  type: string
                type: array
              ports:
                description: The associated ports of the external service.
                items:
                  properties:
                    clientsideTls:
                      description: |-
                        The tls config for the given port.
                        If the protocol is HTTPS or TLS, the ExternalService will be configured to use TLS automatically.
                        If used in conjunction with targetPort this can be used for TLS Origination.
                        For example, port: 80, targetPort: 443, with ClientsideTls will cause port 80 traffic from workloads to be forwarded to 443 resulting in HTTPS traffic over the internet with TLS originating at the sidecar proxy.
                      properties:
                        caCertificates:
                          description: |-
                            Should be empty if mode is `ISTIO_MUTUAL`.
                            The file path to the file containing CA certificates used to verify server certificates, which should be mounted onto the proxy of the specific workload communicating with the external service.
                            If omitted, the proxy will not verify the server’s certificate.
                          type: string
                        clientCertificate:
                          description: |-
                            REQUIRED if mode is `MUTUAL`.
                            Should be empty if mode is `ISTIO_MUTUAL`.
                            The file path to the client-side TLS certificate to use, which should be mounted onto the proxy of the specific workload communicating with the external service.
                          type: string
                        mode:
                          description: |-
                            tls mode passed to corresponding DestinationRules' tls traffic policy
                            MUST be one of the following: SIMPLE, MUTUAL, ISTIO_MUTUAL, DISABLED
                          enum:
                          - SIMPLE
                          - DISABLE
                          - MUTUAL
                          - ISTIO_MUTUAL
                          type: string
                        privateKey:
                          description: |-
                            REQUIRED if mode is `MUTUAL`.
                            Should be empty if mode is `ISTIO_MUTUAL`.
                            The file path to the client’s private key, which should be mounted onto the proxy of the specific workload communicating with the external service.
                          type: string
                        sni:
                          description: |-
                            SNI string to present to the server during TLS handshake.
                            If there is a single host in the hosts list, this will be used as the SNI string.
                          type: string
                      type: object
                    name:
                      description: A label for the port, eg "http".
                      type: string
                    number:
                      description: The port number. Must be a valid, non-negative
                        integer port number.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    protocol:
                      description: |-
                        The protocol used in communication with this destination
                        MUST be one of the following: HTTP, HTTPS, GRPC, HTTP2, MONGO, TCP, TLS.
                      type: string
                    targetPort:
                      description: |-
                        (optional): The port number or name used to match the corresponding port on the ExternalService's backing ExternalEndpoints.
                        All of the backing ExternalEndpoints for this ExternalService must contain
                        this port, matching by name or number.
                        If no backing ExternalEndpoints are provided, a name selector is invalid,
                        and requests will be routed to the provided hosts on the port number specified.
                        If unspecified, will default to the value of the port number field above.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                  type: object
                type: array
              selector:
                additionalProperties:
                  type: string
                description: |-
                  Selecting ExternalEndpoints will provide the addresses used for routing traffic to on the ExternalService's hosts.
                  An empty selector will not select any endpoints.
                  If no endpoints are selected, requests will be routed to the provided hosts using dns resolution.
                type: object
              subjectAltNames:
                description: |-
                  A list of alternate names to verify the subject identity in the
                  certificate. If specified, the proxy will verify that the server
                  certificate's subject alt name matches one of the specified values.
                  Only applicable when using TLS to communicate with the ExternalService.
                items:
                  type: string
                type: array
            type: object
          status:
            description: reflects the status of the ExternalService
            properties:
              appliedDestinationPolicies:
                additionalProperties:
                  properties:
                    policies:
                      description: List of applied destination port policies
                      items:
                        properties:
                          destinationKind:
                            description: the kind of destination object that the policy
                              applies to
                            enum:
                            - SERVICE
                            - VIRTUAL_DESTINATION
                            - EXTERNAL_SERVICE
                            - CLOUD_PROVIDER
                            type: string
                          destinationPort:
                            description: the port on the destination object that the
                              policy applies to
                            format: int32
                            type: integer
                          policy:
                            description: The reference to the policy
                            properties:
                              cluster:
                                description: the cluster of the object. if the field
                                  is omitted, Gloo Mesh will use the same cluster
                                  as the parent object containing this reference.
                                type: string
                              name:
                                description: the name of the object
                                type: string
                              namespace:
                                description: the namespace of the object. if the field
                                  is omitted, Gloo Mesh will use the same namespace
                                  as the parent object containing this reference.
                                type: string
                            type: object
                        type: object
                      type: array
                  type: object
                description: |-
                  Map of policy GVK to policy references for all policies applied on this
                  resource.
                type: object
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              ownerWorkspace:
                description: Name of Workspace that owns ExternalService
                properties:
                  workspace:
                    type: string
                type: object
              selectedExternalEndpoints:
                description: The list of endpoints that this ExternalService is currently
                  using.
                items:
                  properties:
                    cluster:
                      description: the cluster of the object. if the field is omitted,
                        Gloo Mesh will use the same cluster as the parent object containing
                        this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. if the field is omitted,
                        Gloo Mesh will use the same namespace as the parent object
                        containing this reference.
                      type: string
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 42a6a63e953d3cc1
    crd.solo.io/version: 2.2.5
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: externalendpoints.networking.gloo.solo.io
spec:
  group: networking.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ExternalEndpoint
    listKind: ExternalEndpointList
    plural: externalendpoints
    shortNames:
    - ep
    singular: externalendpoint
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: ExternalEndpoint defines a static IP for routing which exist
              outside the mesh. ExternalEndpoints provide a mechanism for direct resolution
              of the addresses backing ExternalServices.
            properties:
              address:
                description: |-
                  Address associated with the network endpoint without the
                  port.  Domain names can be used if and only if the resolution is set
                  to DNS, and must be fully-qualified without wildcards. Use the form
                  unix:///absolute/path/to/socket for Unix domain socket endpoints.
                type: string
              locality:
                description: |-
                  The locality associated with the endpoint. A locality corresponds
                  to a failure domain (e.g., country/region/zone). Arbitrary failure
                  domain hierarchies can be represented by separating each
                  encapsulating failure domain by /. For example, the locality of an
                  an endpoint in US, in US-East-1 region, within availability zone
                  az-1, in data center rack r11 can be represented as
                  us/us-east-1/az-1/r11. Istio will configure the sidecar to route to
                  endpoints within the same locality as the sidecar. If none of the
                  endpoints in the locality are available, endpoints parent locality
                  (but within the same network ID) will be chosen. For example, if
                  there are two endpoints in same network (networkID "n1"), say e1
                  with locality us/us-east-1/az-1/r11 and e2 with locality
                  us/us-east-1/az-2/r12, a sidecar from us/us-east-1/az-1/r11 locality
                  will prefer e1 from the same locality over e2 from a different
                  locality. Endpoint e2 could be the IP associated with a gateway
                  (that bridges networks n1 and n2), or the IP associated with a
                  standard service endpoint.
                properties:
                  region:
                    description: |-
                      Represents a large geographic area, such as us-east1. A region typically contains a number of availability zones.
                      A workload's region is determined by the value of the "topology.kubernetes.io/region" label (or the deprecated
                      "failure-domain.beta.kubernetes.io/region" one) of the Node
                      that is running it.
                    type: string
                  subZone:
                    description: |-
                      A zone can be divided into sub-zones to have even more fine-grained control over load balancing behavior.
                      The sub-zone concept doesn't exist in Kubernetes. This value is derived by the Istio-specific
                      "topology.istio.io/subzone" Node label.
                    type: string
                  zone:
                    description: |-
                      Represents an availability zone within a region, e.g. us-east-1a.
                      A workload's zone is determined by the value of the "topology.kubernetes.io/zone" label (or the deprecated
                      "failure-domain.beta.kubernetes.io/zone" one) of the Node that is running it.
                    type: string
                type: object
              ports:
                description: Set of ports on which the ExternalEndpoint's address
                  receives traffic.
                items:
                  properties:
                    name:
                      description: name of the port. required if more then one port
                        is specified on the ExternalEndpoint
                      type: string
                    number:
                      description: the port number.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                type: array
            type: object
          status:
            description: reflects the status of the ExternalEndpoint
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: f6afd07a432dea81
    crd.solo.io/version: 2.2.5
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: routetables.networking.gloo.solo.io
spec:
  group: networking.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: RouteTable
    listKind: RouteTableList
    plural: routetables
    shortNames:
    - rt
    singular: routetable
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              `RouteTables` defines one or more hosts and a set of traffic route rules to handle traffic for these hosts.
              The traffic route rules can be delegated to other RouteTable based on one or more given hosts or specific paths.

              You may deploy a RouteTable resource in any namespace within your workspace. In order for the RouteTable to be used
              outside of your workspace, you must deploy the RouteTable resource in the root config of your workspace and label it
              with `workspace.solo.io/exported: "true"`. If your RouteTable delegates some traffic rules to another RouteTable,
              the delegated RouteTable may reside in the same workspace or different workspace from your RouteTable. If they are
              in different workspaces, the delegated RouteTable must reside in the root config of their
              workspaces and labelled with `workspace.solo.io/exported: "true"`.

              RouteTable can be used to match traffic originating from a gateway as well as from sidecars within the mesh,
              depends on the configuration of the `virtualGateways` field.

              The following example defines route configuration for the 'uk.bookinfo.com' and 'eu.bookinfo.com' hosts,
              when traffic arriving at the `my-gateway` virtual gateway which is declared in the `my-gateway-ws` workspace.
              When the cookie in the header matches to 'user=dev-123', traffic is forwarded to the port 7777 of the
              `v1` of `reviews.qa`. When the path matches exactly to `/reviews/`, 80% traffic is forwarded to the port 9080
              of `reviews.prod` and 20% traffic is forwarded to the port 9080 of `reviews.qa`. All other traffic is sent
              to the default destination, which is the port 9080 of `reviews.prod` service in the `bookinfo` workspace.

              ```yaml
              apiVersion: networking.gloo.solo.io/v2
              kind: RouteTable
              metadata:
                name: bookinfo-root-routes
                namespace: bookinfo
              spec:
                hosts:
                  - 'uk.bookinfo.com'
                  - 'eu.bookinfo.com'
                virtualGateways:
                  - name: my-gateway
                    namespace: my-gateway-ws
                defaultDestination:
                  ref:
                    name: reviews
                    namespace: prod
                  port:
                    number: 9080
                http:
                  - name: reviews-qa
                    matchers:
                      - headers:
                          - name: cookie
                            value: 'user=dev-123'
                    forwardTo:
                      destinations:
                        - ref:
                            name: reviews
                            namespace: qa
                          subset:
                            version: v1
                          port:
                            number: 7777
                  - name: reviews
                    matchers:
                      - name: review-prefix
                        uri:
                          exact: /reviews/
                    forwardTo:
                      destinations:
                        - weight: 80
                        - ref:
                            name: reviews
                            namespace: qa
                          port:
                            number: 9080
                          weight: 20
              ```

              The following example defines route configuration for the 'uk.bookinfo.com' and 'eu.bookinfo.com' hosts,
              when traffic arriving at the `my-gateway` virtual gateway which is declared in the `my-gateway-ws` workspace.
              When the path matches prefix `/lambda`, traffic is forwarded to the backing aws-provider CloudProvider, where
              There is an associated CloudResources resource containing a lambda service named logicalName aws-dest within it. An
              option, "SYNC", is also passed to indicate we want to route to the backing cloud function synchronously (though in
              this case, "SYNC" is the default option and can be safely omitted).

              ```yaml
              apiVersion: networking.gloo.solo.io/v2
              kind: RouteTable
              metadata:
                name: bookinfo-root-routes
                namespace: bookinfo
              spec:
                hosts:
                  - 'uk.bookinfo.com'
                  - 'eu.bookinfo.com'
                virtualGateways:
                  - name: my-gateway
                    namespace: my-gateway-ws
                defaultDestination:
                  ref:
                    name: reviews
                    namespace: prod
                  port:
                    number: 9080
                http:
                  - name: lambda
                    matchers:
                      - uri:
                          prefix: /lambda
                    labels:
                      route: lambda
                    forwardTo:
                      destinations:
                        - ref:
                            name: aws-provider
                            namespace: bookinfo
                            cluster: cluster-1
                          kind: CLOUD_PROVIDER
                          function:
                            logicalName: aws-dest
                            awsLambda:
                              invocationStyle: SYNC
              ```

              The following example defines route configuration for the 'uk.bookinfo.com' and 'eu.bookinfo.com' hosts,
              when traffic arriving at the `my-gateway` virtual gateway which is declared in the `my-gateway-ws` workspace.
              When the path matches prefix `/lambda`, traffic is forwarded to the delegated routetable for handling lambdas.
              `allowedRoutes` is included to restrict usage of CloudProvider functionality which routes to cloud functions
              `backend-function-*` in region us-east-2 and which assume the `dev-team-B-*` IAM role.

              ```yaml
              apiVersion: networking.gloo.solo.io/v2
              kind: RouteTable
              metadata:
                name: bookinfo-root-routes
                namespace: bookinfo
              spec:
                hosts:
                  - 'uk.bookinfo.com'
                  - 'eu.bookinfo.com'
                virtualGateways:
                  - name: my-gateway
                    namespace: my-gateway-ws
                defaultDestination:
                  ref:
                    name: reviews
                    namespace: prod
                  port:
                    number: 9080
                http:
                  - name: lambda
                    matchers:
                      - uri:
                          prefix: /lambda
                    labels:
                      route: lambda
                    delegate:
                      allowedRoutes:
                        - cloudProvider:
                            aws:
                              lambda_function:
                                - backend-function-.*
                              iam_roles:
                                - dev-team-B-.*
                              regions:
                                - us-east-2
                      routeTables:
                        - labels:
                            table: lambda
              ```
            properties:
              defaultDestination:
                description: 'Optional: Routes that do not specify a destination will
                  forward traffic to this destination.'
                oneOf:
                - not:
                    anyOf:
                    - properties:
                        function:
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - awsLambda
                          - required:
                            - awsLambda
                      required:
                      - function
                - properties:
                    function:
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - awsLambda
                      - required:
                        - awsLambda
                  required:
                  - function
                properties:
                  function:
                    properties:
                      awsLambda:
                        properties:
                          invocationStyle:
                            description: |-
                              Can be either Sync or Async. See [AWS Invoke](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html)
                              for more details.
                            enum:
                            - SYNC
                            - ASYNC
                            type: string
                          unwrapAsAlb:
                            description: |-
                              Unwrap the response as if the proxy was an ALB.
                              Intended to ease migration when previously using alb to invoke Lambdas.
                              For further information see below link for the expected format when true.
                              https://docs.aws.amazon.com/elasticloadbalancing/latest/application/lambda-functions.html
                              Only one of `unwrapAsAlb` or `unwrapAsApiGateway` should be provided.
                              If more than one is provided only one will be checked with priority unwrapAsAlb, unwrapAsApiGateway
                            type: boolean
                          unwrapAsApiGateway:
                            description: |-
                              Unwrap the response as if the proxy was an AWS API Gateway.
                              Intended to ease migration when previously using API Gateway to invoke Lambdas.
                              Only one of `unwrapAsAlb` or `unwrapAsApiGateway` should be provided.
                              If more than one is provided only one will be checked with priority unwrapAsAlb, unwrapAsApiGateway
                            type: boolean
                        type: object
                      logicalName:
                        description: The logical name used to call the specified Cloud
                          Provider.
                        type: string
                    type: object
                  kind:
                    description: the kind of destination being selected. defaults
                      to Kubernetes Service.
                    enum:
                    - SERVICE
                    - VIRTUAL_DESTINATION
                    - EXTERNAL_SERVICE
                    - CLOUD_PROVIDER
                    type: string
                  port:
                    description: the port on the destination object being targeted.
                      required if the object provides more than one port.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - number
                        - required:
                          - name
                    - required:
                      - number
                    - required:
                      - name
                    properties:
                      name:
                        description: the name of the port on the destination objects
                          being targeted.
                        type: string
                      number:
                        description: the number of the port on the destination objects
                          being targeted.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                    type: object
                  ref:
                    description: reference to the destination object by its metadata
                    properties:
                      cluster:
                        description: the cluster of the object. if the field is omitted,
                          Gloo Mesh will use the same cluster as the parent object
                          containing this reference.
                        type: string
                      name:
                        description: the name of the object
                        type: string
                      namespace:
                        description: the namespace of the object. if the field is
                          omitted, Gloo Mesh will use the same namespace as the parent
                          object containing this reference.
                        type: string
                    type: object
                  subset:
                    additionalProperties:
                      type: string
                    description: |-
                      select a subset of the destination's endpoints for routing based on their labels.
                      Not applicable for a CloudProvider destination.
                    type: object
                  weight:
                    description: |-
                      Specify the proportion of traffic to be forwarded to this destination.
                      Weights across all of the `destinations` must sum to 100.
                      Weight is only relevant when used in the context of a route with multiple destinations.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
              hosts:
                description: |-
                  Optional: One or more hosts for which this route table will route traffic.
                  Supports wildcards. To avoid potential misconfigurations, it is recommended to always use fully
                  qualified domain names over short names.
                  *Note*: It must be empty for a delegated RouteTable.
                items:
                  type: string
                type: array
              http:
                description: The set of HTTP routes this route table will serve. If
                  no routes are matched in the route table, the client will get a
                  404.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - forwardTo
                      - required:
                        - delegate
                      - properties:
                          redirect:
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - pathRedirect
                            - required:
                              - pathRedirect
                        required:
                        - redirect
                      - required:
                        - directResponse
                      - properties:
                          graphql:
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - schema
                                - required:
                                  - stitchedSchema
                            - required:
                              - schema
                            - required:
                              - stitchedSchema
                        required:
                        - graphql
                  - required:
                    - forwardTo
                  - required:
                    - delegate
                  - properties:
                      redirect:
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - pathRedirect
                        - required:
                          - pathRedirect
                    required:
                    - redirect
                  - required:
                    - directResponse
                  - properties:
                      graphql:
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - schema
                            - required:
                              - stitchedSchema
                        - required:
                          - schema
                        - required:
                          - stitchedSchema
                    required:
                    - graphql
                  properties:
                    delegate:
                      description: |-
                        delegate the handling of traffic to one or more HTTP Route Tables. This can be used to
                        delegate a subset of the route table's traffic to another route table, which may live
                        in an imported workspace, or to separate routing concerns between objects.
                      properties:
                        allowedRoutes:
                          description: |-
                            Optional: Restrict delegation to the RouteTables that match the set of route filter criteria specified.
                            If not specified, any route will be allowed to be referenced by this RouteTable.
                          items:
                            properties:
                              cloudProvider:
                                description: 'Optional: filter out route tables that
                                  use specify CloudProvider functionality, if provided.'
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - aws
                                - required:
                                  - aws
                                properties:
                                  aws:
                                    description: |-
                                      Optional: filter out route tables that use AWS functionality, if provided. Each evaluated route must match at
                                      at least one of every repeated field provided, if not empty.
                                    properties:
                                      accountIds:
                                        description: 'Optional: filter out route tables
                                          that use an AWS account ID which does not
                                          match the selector, if provided.'
                                        items:
                                          type: string
                                        type: array
                                      iamRoles:
                                        description: |-
                                          Optional: filter out route tables that use IAM invoke roles which do not match the selector, if provided.
                                          Regex supported.
                                        items:
                                          type: string
                                        type: array
                                      lambdaFunctions:
                                        description: |-
                                          Optional: filter out route tables that use backend Lambda functions that do no match the selector,
                                          if provided. Regex supported.
                                        items:
                                          type: string
                                        type: array
                                      regions:
                                        description: 'Optional: filter out route tables
                                          that use regions which do not match the
                                          selector, if provided.'
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                type: object
                            type: object
                          type: array
                        routeTables:
                          description: |-
                            Delegate to the RouteTables that match the given selectors.
                            Selected route tables are ordered by creation time stamp in ascending order to guarantee consistent ordering.
                            Route tables will be selected from the pool of route tables defined within the current workspace, as well as any imported into the workspace.
                          items:
                            properties:
                              cluster:
                                description: |-
                                  Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                  matching objects across all clusters available in the parent object's workspace.
                                type: string
                              labels:
                                additionalProperties:
                                  type: string
                                description: labels matching those of the object
                                type: object
                              name:
                                description: |-
                                  Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                  matching objects with any name available in the parent object's workspace.
                                type: string
                              namespace:
                                description: |-
                                  Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                  matching objects across all namespaces available in the parent object's workspace.
                                type: string
                              workspace:
                                description: |-
                                  Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                  matching objects across all workspaces available in the parent object's workspace.
                                type: string
                            type: object
                          type: array
                        sortMethod:
                          description: How routes should be sorted
                          enum:
                          - TABLE_WEIGHT
                          - ROUTE_SPECIFICITY
                          type: string
                      type: object
                    directResponse:
                      description: respond directly to the client from the proxy.
                      properties:
                        body:
                          description: |-
                            Specifies the content of the response body. If this setting is omitted,
                            no body is included in the generated response.

                            Note: Headers can be specified using the Header Modification feature in the enclosing
                            Route, ConnectionHandler, or Gateway options.
                          type: string
                        status:
                          description: Required. Specifies an HTTP response status
                            between 100-599 inclusive to be returned.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    forwardTo:
                      description: forward traffic to one or more destination services.
                      properties:
                        destinations:
                          description: |-
                            Defines the destination upstream for routing
                            Some destinations require additional configuration for the route (e.g. AWS upstreams require a function name
                            to be specified).
                          items:
                            oneOf:
                            - not:
                                anyOf:
                                - properties:
                                    function:
                                      oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - awsLambda
                                      - required:
                                        - awsLambda
                                  required:
                                  - function
                            - properties:
                                function:
                                  oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - awsLambda
                                  - required:
                                    - awsLambda
                              required:
                              - function
                            properties:
                              function:
                                properties:
                                  awsLambda:
                                    properties:
                                      invocationStyle:
                                        description: |-
                                          Can be either Sync or Async. See [AWS Invoke](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html)
                                          for more details.
                                        enum:
                                        - SYNC
                                        - ASYNC
                                        type: string
                                      unwrapAsAlb:
                                        description: |-
                                          Unwrap the response as if the proxy was an ALB.
                                          Intended to ease migration when previously using alb to invoke Lambdas.
                                          For further information see below link for the expected format when true.
                                          https://docs.aws.amazon.com/elasticloadbalancing/latest/application/lambda-functions.html
                                          Only one of `unwrapAsAlb` or `unwrapAsApiGateway` should be provided.
                                          If more than one is provided only one will be checked with priority unwrapAsAlb, unwrapAsApiGateway
                                        type: boolean
                                      unwrapAsApiGateway:
                                        description: |-
                                          Unwrap the response as if the proxy was an AWS API Gateway.
                                          Intended to ease migration when previously using API Gateway to invoke Lambdas.
                                          Only one of `unwrapAsAlb` or `unwrapAsApiGateway` should be provided.
                                          If more than one is provided only one will be checked with priority unwrapAsAlb, unwrapAsApiGateway
                                        type: boolean
                                    type: object
                                  logicalName:
                                    description: The logical name used to call the
                                      specified Cloud Provider.
                                    type: string
                                type: object
                              kind:
                                description: the kind of destination being selected.
                                  defaults to Kubernetes Service.
                                enum:
                                - SERVICE
                                - VIRTUAL_DESTINATION
                                - EXTERNAL_SERVICE
                                - CLOUD_PROVIDER
                                type: string
                              port:
                                description: the port on the destination object being
                                  targeted. required if the object provides more than
                                  one port.
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - number
                                    - required:
                                      - name
                                - required:
                                  - number
                                - required:
                                  - name
                                properties:
                                  name:
                                    description: the name of the port on the destination
                                      objects being targeted.
                                    type: string
                                  number:
                                    description: the number of the port on the destination
                                      objects being targeted.
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                type: object
                              ref:
                                description: reference to the destination object by
                                  its metadata
                                properties:
                                  cluster:
                                    description: the cluster of the object. if the
                                      field is omitted, Gloo Mesh will use the same
                                      cluster as the parent object containing this
                                      reference.
                                    type: string
                                  name:
                                    description: the name of the object
                                    type: string
                                  namespace:
                                    description: the namespace of the object. if the
                                      field is omitted, Gloo Mesh will use the same
                                      namespace as the parent object containing this
                                      reference.
                                    type: string
                                type: object
                              subset:
                                additionalProperties:
                                  type: string
                                description: |-
                                  select a subset of the destination's endpoints for routing based on their labels.
                                  Not applicable for a CloudProvider destination.
                                type: object
                              weight:
                                description: |-
                                  Specify the proportion of traffic to be forwarded to this destination.
                                  Weights across all of the `destinations` must sum to 100.
                                  Weight is only relevant when used in the context of a route with multiple destinations.
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                            type: object
                          type: array
                        hostRewrite:
                          description: Replace the Authority/Host header with this
                            value before forwarding the request to the upstream destination.
                          type: string
                        pathRewrite:
                          description: |-
                            Replace the path specified in the matcher with this value before forwarding the request to the upstream destination.
                            When a prefix matcher is used, only the prefix portion of the path is rewritten.
                            When an exact matcher is used, the whole path is replaced.
                            Rewriting the path when a regex matcher is used is currently unsupported.
                          type: string
                      type: object
                    graphql:
                      description: |-
                        handle the HTTP request as a GraphQL request, including query validation, and execution of the GraphQL request.
                        The incoming GraphQL request must either be a GET or POST request, see
                        ["Serving over HTTP"](https://graphql.org/learn/serving-over-http/).
                      properties:
                        options:
                          description: Options that apply to this GraphQL Schema.
                          properties:
                            logSensitiveInfo:
                              description: |-
                                Include information about request/response in the envoy debug logs.
                                This is helpful for debugging GraphQL.
                                Defaults to false.
                              nullable: true
                              type: boolean
                          type: object
                        schema:
                          description: Reference to a GraphQLSchema resource that
                            contains the configuration for this subschema.
                          properties:
                            clusterName:
                              description: name of the cluster in which the resource
                                exists
                              type: string
                            name:
                              description: name of the resource being referenced
                              type: string
                            namespace:
                              description: namespace of the resource being referenced
                              type: string
                          type: object
                        stitchedSchema:
                          description: Reference to a GraphQLStitchedSchema resource
                            that contains the configuration for this subschema.
                          properties:
                            clusterName:
                              description: name of the cluster in which the resource
                                exists
                              type: string
                            name:
                              description: name of the resource being referenced
                              type: string
                            namespace:
                              description: namespace of the resource being referenced
                              type: string
                          type: object
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels for the route. used to apply policies which
                        implement routeSelectors.
                      type: object
                    matchers:
                      description: |-
                        The set of request matchers which this route will match on. If none are specified, this route will match any HTTP traffic.
                        On a delegated RouteTable, this route will only match traffic that includes both the parent and child's matchers.
                        If these sets conflict, the delegating route on the parent will be replaced with a DirectResponseAction indicating the misconfiguration.
                      items:
                        properties:
                          headers:
                            description: 'Optional: Specify a set of headers which
                              requests must match in entirety (all headers must match).'
                            items:
                              properties:
                                invertMatch:
                                  description: |-
                                    If set to true, the result of the match will be inverted. Defaults to false.

                                     Examples:

                                         - name=foo, invert_match=true: matches if no header named `foo` is present
                                         - name=foo, value=bar, invert_match=true: matches if no header named `foo` with value `bar` is present
                                         - name=foo, value=``\d{3}``, regex=true, invert_match=true: matches if no header named `foo` with a value consisting of three integers is present.
                                  type: boolean
                                name:
                                  description: Specify the name of the header in the
                                    request.
                                  type: string
                                regex:
                                  description: Specify whether the header value should
                                    be treated as regex.
                                  type: boolean
                                value:
                                  description: |-
                                    Specify the value of the header. If the value is absent a request that
                                    has the name header will match, regardless of the header’s value.
                                  type: string
                              type: object
                            type: array
                          method:
                            description: 'Optional: Specify an HTTP method to match
                              against.'
                            type: string
                          name:
                            description: |-
                              Optional: The name assigned to a match. The match's name will be
                              concatenated with the parent route's name and will be logged in
                              the access logs for requests matching this route.
                            type: string
                          port:
                            description: 'Optional: Specifies ports on the host to
                              match against.'
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          queryParameters:
                            description: 'Optional: Specify a set of URL query parameters
                              which requests must match in entirety (all query params
                              must match).'
                            items:
                              properties:
                                name:
                                  description: Specify the name of a key that must
                                    be present in the requested path's query string.
                                  type: string
                                regex:
                                  description: If true, treat `value` as a regular
                                    expression.
                                  type: boolean
                                value:
                                  description: Specify the value of the query parameter
                                    keyed on `name`.
                                  type: string
                              type: object
                            type: array
                          uri:
                            description: 'Optional: Specify match criteria against
                              the targeted path.'
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - exact
                                - required:
                                  - prefix
                                - required:
                                  - regex
                                - required:
                                  - suffix
                            - required:
                              - exact
                            - required:
                              - prefix
                            - required:
                              - regex
                            - required:
                              - suffix
                            properties:
                              exact:
                                description: Exact string match.
                                type: string
                              ignoreCase:
                                description: If true, indicates the exact/prefix/suffix
                                  matching should be case insensitive. This has no
                                  effect for the regex match.
                                type: boolean
                              prefix:
                                description: Prefix-based match.
                                type: string
                              regex:
                                description: ECMAscript style regex-based match.
                                type: string
                              suffix:
                                description: Suffix-based match.
                                type: string
                            type: object
                        type: object
                      type: array
                    name:
                      description: unique name of the route (within the route table).
                        used to identify the route for metrics
                      type: string
                    redirect:
                      description: return a redirect response to the downstream client.
                      properties:
                        hostRedirect:
                          description: The host portion of the URL will be swapped
                            with this value.
                          type: string
                        pathRedirect:
                          description: The entire path portion of the URL will be
                            overwritten with this value.
                          type: string
                        responseCode:
                          description: |-
                            The HTTP status code to use in the redirect response. The default response
                            code is MOVED_PERMANENTLY (301).
                          enum:
                          - MOVED_PERMANENTLY
                          - FOUND
                          - SEE_OTHER
                          - TEMPORARY_REDIRECT
                          - PERMANENT_REDIRECT
                          type: string
                      type: object
                  type: object
                type: array
              virtualGateways:
                description: |-
                  Optional: A list of references to the virtual gateways which should serve this route table.
                  Only valid for route tables which define at least one host.
                  *Note*: This field must be empty for a delegated RouteTable.

                  When not specified, the route table applies to either all the sidecars in the workspace
                  or only sidecars for selected workloads (via the `workloadSelectors` field) in the workspace where
                  the route table is deployed or imported.

                  The following applies to sidecars of all the workloads for the workspace where the route table is
                  deployed or imported: set `virtualGateways` to `null` and `workloadSelectors` to `[]`.

                  The following applies to the `my-gateway` virtual gateway in the `gateway` workspace and
                  no sidecars: set `virtualGateways.name` to `my-gateway`, `virtualGateways.namespace` to `gateway`, and `workloadSelectors` to `[]`.

                  The following applies to the `my-gateway` virtual gateway in the `gateway` workspace and
                  sidecars of all the workloads for the workspace where the route table is
                  deployed or imported: set `virtualGateways.name` to `my-gateway`, `virtualGateways.namespace` to `gateway`, and `workloadSelectors` to `{}`.

                  The following applies to sidecars of all the `app: foo` workloads for the workspace where the route table
                  is deployed or imported: set `virtualGateways` to `null` and `workloadSelectors.selector.labels` to `app: foo`.

                  The following applies to the `my-gateway` virtual gateway in the `gateway` workspace and
                  sidecars of all the `app: foo` workloads for the workspace where the route table is deployed or imported:
                  set `virtualGateways.name` to `my-gateway`, `virtualGateways.namespace` to `gateway`, and `workloadSelectors.selector.labels` to `app: foo`.
                items:
                  properties:
                    cluster:
                      description: the cluster of the object. if the field is omitted,
                        Gloo Mesh will use the same cluster as the parent object containing
                        this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. if the field is omitted,
                        Gloo Mesh will use the same namespace as the parent object
                        containing this reference.
                      type: string
                  type: object
                type: array
              weight:
                description: |-
                  Weight is used when sorting route tables in delegate action or routes when sorted by specificity.
                  Higher integer values are considered higher priority. The default value is 0.
                format: int32
                type: integer
              workloadSelectors:
                description: |-
                  Optional: Selectors for source workloads (with sidecars) which will route traffic by this route table.
                  Only valid for route tables which define at least one host.
                  If no workloadSelectors or virtualGateways are specified, all workloads in the workspace will automatically be selected.
                  If VirtualGateways are specified, set `workloadSelectors: - {}` to select all workloads in the workspace.
                  *Note*: This field must be empty for a delegated RouteTable.
                  *Note*: Selection of external workloads (VMs) is currently not supported.
                items:
                  properties:
                    kind:
                      description: The kind of workload being selected. Defaults to
                        Kube.
                      enum:
                      - KUBE
                      - VM
                      type: string
                    port:
                      description: |-
                        The port to select on the selected workloads.
                        Only applies to policies which select specific workload ports, such as the WasmDeploymentPolicy.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    selector:
                      description: Selector used to match Workload objects by their
                        metadata.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          status:
            description: reflects the status of the RouteTable
            properties:
              allowedVirtualGateways:
                description: list of allowed VirtualGateways this RouteTable can select
                items:
                  properties:
                    cluster:
                      description: the cluster of the object. if the field is omitted,
                        Gloo Mesh will use the same cluster as the parent object containing
                        this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. if the field is omitted,
                        Gloo Mesh will use the same namespace as the parent object
                        containing this reference.
                      type: string
                  type: object
                type: array
              appliedRoutePolicies:
                additionalProperties:
                  properties:
                    policies:
                      description: List of applied route policies
                      items:
                        properties:
                          policy:
                            description: The reference to the policy
                            properties:
                              cluster:
                                description: the cluster of the object. if the field
                                  is omitted, Gloo Mesh will use the same cluster
                                  as the parent object containing this reference.
                                type: string
                              name:
                                description: the name of the object
                                type: string
                              namespace:
                                description: the namespace of the object. if the field
                                  is omitted, Gloo Mesh will use the same namespace
                                  as the parent object containing this reference.
                                type: string
                            type: object
                          routeIndex:
                            description: The index of the route on the route table
                            format: int32
                            type: integer
                          routeName:
                            description: The name of the route that the policy is
                              applied to
                            type: string
                        type: object
                      type: array
                  type: object
                description: |-
                  Map of policy GVK to policy references for all policies applied on this
                  resource.
                type: object
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              ownerWorkspace:
                description: Name of Workspace that owns the route table
                properties:
                  workspace:
                    type: string
                type: object
              parentRouteTables:
                description: The parents of this route table, if it is a delegated
                  route table.
                items:
                  properties:
                    cluster:
                      description: the cluster of the object. if the field is omitted,
                        Gloo Mesh will use the same cluster as the parent object containing
                        this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. if the field is omitted,
                        Gloo Mesh will use the same namespace as the parent object
                        containing this reference.
                      type: string
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 32dac097284d9274
    crd.solo.io/version: 2.2.5
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: virtualdestinations.networking.gloo.solo.io
spec:
  group: networking.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: VirtualDestination
    listKind: VirtualDestinationList
    plural: virtualdestinations
    shortNames:
    - vd
    singular: virtualdestination
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: VirtualDestinations define groupings of backing destinations
              (for network traffic).
            properties:
              clientMode:
                description: |-
                  Optional: Client mode determines how the VirtualDestination will be translated.
                  If nil, the mode is inherited from the WorkspaceSettings defined by the admin.
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - auto
                    - required:
                      - sniRouting
                    - required:
                      - tlsTermination
                - required:
                  - auto
                - required:
                  - sniRouting
                - required:
                  - tlsTermination
                properties:
                  auto:
                    description: |-
                      The default mode is to use sni routing via tls passthrough at the East/West Gateway to route to services across clusters.
                      In the future, this may change to become smarter (e.g., detect if any pods backing the virtual destination don't have sidecars,
                      if so, then use tls termination so all pods are routeable).
                      For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/empty).
                    maxProperties: 0
                    type: object
                  sniRouting:
                    description: |-
                      Sni routing mode uses tls passthrough to route traffic to the proper pod (with sidecar) from the East/West Gateway.
                      For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/empty).
                    maxProperties: 0
                    type: object
                  tlsTermination:
                    description: |-
                      Tls termination mode uses tls termination at the East/West Gateway to route traffic to the correct pod.
                      This mode is ideal for Gloo Mesh Gateway, i.e. some backing pods don't have sidecars.
                      Since TLS is terminated at the East/West Gateway, the backing service (if it has a sidecar) will not be able to
                      verify the istio mTLS identity of the originating client; rather it will verify the istio mTLS cert of the East/West Gateway.
                      For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/empty).
                    maxProperties: 0
                    type: object
                type: object
              externalServices:
                description: |-
                  Selectors for the backing External services that comprise this VirtualDestination.
                  An external service will be selected if it matches any of the given selectors.
                  Multiple External Services can be selected.
                items:
                  properties:
                    cluster:
                      description: |-
                        Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                        matching objects across all clusters available in the parent object's workspace.
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: labels matching those of the object
                      type: object
                    name:
                      description: |-
                        Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                        matching objects with any name available in the parent object's workspace.
                      type: string
                    namespace:
                      description: |-
                        Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                        matching objects across all namespaces available in the parent object's workspace.
                      type: string
                    workspace:
                      description: |-
                        Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                        matching objects across all workspaces available in the parent object's workspace.
                      type: string
                  type: object
                type: array
              hosts:
                description: 'Optional: The set of custom hosts for which this virtual
                  destination will serve traffic.'
                items:
                  type: string
                type: array
              ports:
                description: 'Required: The ports on which the VirtualDestination
                  will serve traffic. Must have at least one port.'
                items:
                  properties:
                    number:
                      description: The port number. Must be a valid, non-negative
                        integer port number.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    protocol:
                      description: |-
                        The protocol used in communication with this destination
                        MUST be one of the following: HTTP, HTTPS, GRPC, HTTP2, MONGO, TCP, TLS.
                        Note that the VirtualDestination protocol may not match the protocol of the backing k8s Service(s).
                        For example, VirtualDestinations pointing to GRPC services will need the protocol set to GRPC.
                        The prefix of the k8s Service port's name will typically match the needed PROTOCOL in such cases.
                      type: string
                    targetPort:
                      description: |-
                        (optional): The port number or name used to match the corresponding port on the
                        VirtualDestination's backing Services and ExternalServices.
                        All of the backing services for this VirtualDestination must contain
                        this port, matching by name or number.
                        If unspecified, will default to the value of the port number field above.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                  type: object
                type: array
              services:
                description: |-
                  Selectors for the backing K8s services that comprise this VirtualDestination.
                  A service will be selected if it matches any of the given selectors.
                  Currently only one K8s Service can be selected per cluster. If more than one service is selected
                  within a cluster the VirtualDestination will be invalid and will not be translated.
                  When a request is routed through the VirtualDestination, it will be forwarded to one of the backing services, selected at random.
                  (To forward to the service on the local cluster only, a FailoverPolicy and/or OutlierDetectionPolicy must be configured.)
                  If a deployment is unavailable, requests will not be forwarded to that deployment.
                items:
                  properties:
                    cluster:
                      description: |-
                        Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                        matching objects across all clusters available in the parent object's workspace.
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: labels matching those of the object
                      type: object
                    name:
                      description: |-
                        Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                        matching objects with any name available in the parent object's workspace.
                      type: string
                    namespace:
                      description: |-
                        Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                        matching objects across all namespaces available in the parent object's workspace.
                      type: string
                    workspace:
                      description: |-
                        Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                        matching objects across all workspaces available in the parent object's workspace.
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: reflects the status of the VirtualDestination
            properties:
              appliedDestinationPolicies:
                additionalProperties:
                  properties:
                    policies:
                      description: List of applied destination port policies
                      items:
                        properties:
                          destinationKind:
                            description: the kind of destination object that the policy
                              applies to
                            enum:
                            - SERVICE
                            - VIRTUAL_DESTINATION
                            - EXTERNAL_SERVICE
                            - CLOUD_PROVIDER
                            type: string
                          destinationPort:
                            description: the port on the destination object that the
                              policy applies to
                            format: int32
                            type: integer
                          policy:
                            description: The reference to the policy
                            properties:
                              cluster:
                                description: the cluster of the object. if the field
                                  is omitted, Gloo Mesh will use the same cluster
                                  as the parent object containing this reference.
                                type: string
                              name:
                                description: the name of the object
                                type: string
                              namespace:
                                description: the namespace of the object. if the field
                                  is omitted, Gloo Mesh will use the same namespace
                                  as the parent object containing this reference.
                                type: string
                            type: object
                        type: object
                      type: array
                  type: object
                description: |-
                  Map of policy GVK to policy references for all policies applied on this
                  resource.
                type: object
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              ownerWorkspace:
                description: Name of Workspace that owns VirtualDestination
                properties:
                  workspace:
                    type: string
                type: object
              selectedBackingServices:
                description: Destinations that back this virtual destination
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - properties:
                          function:
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - awsLambda
                            - required:
                              - awsLambda
                        required:
                        - function
                  - properties:
                      function:
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - awsLambda
                        - required:
                          - awsLambda
                    required:
                    - function
                  properties:
                    function:
                      properties:
                        awsLambda:
                          properties:
                            invocationStyle:
                              description: |-
                                Can be either Sync or Async. See [AWS Invoke](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html)
                                for more details.
                              enum:
                              - SYNC
                              - ASYNC
                              type: string
                            unwrapAsAlb:
                              description: |-
                                Unwrap the response as if the proxy was an ALB.
                                Intended to ease migration when previously using alb to invoke Lambdas.
                                For further information see below link for the expected format when true.
                                https://docs.aws.amazon.com/elasticloadbalancing/latest/application/lambda-functions.html
                                Only one of `unwrapAsAlb` or `unwrapAsApiGateway` should be provided.
                                If more than one is provided only one will be checked with priority unwrapAsAlb, unwrapAsApiGateway
                              type: boolean
                            unwrapAsApiGateway:
                              description: |-
                                Unwrap the response as if the proxy was an AWS API Gateway.
                                Intended to ease migration when previously using API Gateway to invoke Lambdas.
                                Only one of `unwrapAsAlb` or `unwrapAsApiGateway` should be provided.
                                If more than one is provided only one will be checked with priority unwrapAsAlb, unwrapAsApiGateway
                              type: boolean
                          type: object
                        logicalName:
                          description: The logical name used to call the specified
                            Cloud Provider.
                          type: string
                      type: object
                    kind:
                      description: the kind of destination being selected. defaults
                        to Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      - CLOUD_PROVIDER
                      type: string
                    port:
                      description: the port on the destination object being targeted.
                        required if the object provides more than one port.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    ref:
                      description: reference to the destination object by its metadata
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                    subset:
                      additionalProperties:
                        type: string
                      description: |-
                        select a subset of the destination's endpoints for routing based on their labels.
                        Not applicable for a CloudProvider destination.
                      type: object
                    weight:
                      description: |-
                        Specify the proportion of traffic to be forwarded to this destination.
                        Weights across all of the `destinations` must sum to 100.
                        Weight is only relevant when used in the context of a route with multiple destinations.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 19cddce8af9e008e
    crd.solo.io/version: 2.2.5
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: virtualgateways.networking.gloo.solo.io
spec:
  group: networking.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: VirtualGateway
    listKind: VirtualGatewayList
    plural: virtualgateways
    shortNames:
    - vg
    singular: virtualgateway
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              `VirtualGateway` represents a logical gateway configuration served by Gateway workloads within
              the same workspace. The specification describes a set of ports that the virtual gateway listens
              for incoming or outgoing HTTP/TCP connections, the type of protocol to use, SNI configuration etc.

              For example, the following VirtualGateway resource configures the gateway to listen for incoming
              HTTP requests on port 80, and delegate the route configuration of the '*.bookinfo.com' hostname
              to be provided by the bookinfo workspace. The VirtualGateway is
              applied to a specific set of gateway pods/VMs with the `app:my-gateway-controller`
              label within the same workspace as the VirtualGateway resource.

              ```yaml
              apiVersion: networking.gloo.solo.io/v2
              kind: VirtualGateway
              metadata:
                name: my-gateway
                namespace: some-config-namespace
                labels:
                  workspace.solo.io/exported: 'true'
              spec:
                workloads:
                  - selector:
                      labels:
                        app: my-gateway-controller
                listeners:
                  - port:
                      number: 80
                    allowedRouteTables:
                      - host: '*.bookinfo.com'
                        selector:
                          workspace: bookinfo
              ```
              For example, the following VirtualGateway resource configures the gateway to listen for incoming
              HTTP requests on port 80, delegate any `*.foo.com` request to the `HTTPRouteTable` resource(s)
              provided by the `foo-ws` workspace. Further, on the same port 80, it also delegates any
              `*.bar.com` request to the route configurations provided by the `bar-ws` workspace.

              ```yaml
              apiVersion: networking.gloo.solo.io/v2
              kind: VirtualGateway
              metadata:
                name: my-gateway
                namespace: some-config-namespace
                labels:
                  workspace.solo.io/exported: 'true'
              spec:
                workloads:
                  - selector:
                      labels:
                        app: my-gateway-controller
                listeners:
                  - port:
                      number: 80
                    allowedRouteTables:
                      - host: '*.foo.com'
                        selector:
                          workspace: foo-ws
                      - host: '*.bar.com'
                        selector:
                          workspace: bar-ws
              ```

              For example, the following VirtualGateway resource configures the gateway to act
              as a load balancer listening on port 80 and 9080 (http), 443 (https), and
              9443(https) for ingress.  The VirtualGateway resource is
              applied to a specific set of gateway pods/VMs with the `app: my-gateway-controller`
              label within the same workspace. The route table(s) associated with each
              port 80, 9080 and 443 must be provided by the foo-ws workspace, with hosts that
              match `*.foo.com`. The route table(s) for port 9080 must be provided by the bar-ws
              workspace with hosts that match `*.bar.com`.

              ```yaml
              apiVersion: networking.gloo.solo.io/v2
              kind: VirtualGateway
              metadata:
                name: my-gateway
                namespace: some-config-namespace
                labels:
                  workspace.solo.io/exported: 'true'
              spec:
                workloads:
                  - selector:
                      labels:
                        app: my-gateway-controller
                listeners:
                  - port:
                      number: 80
                    httpsRedirect: true
                    allowedRouteTables:
                      - host: '*.foo.com'
                        selector:
                          workspace: foo-ws
                  - port:
                      number: 443
                    tls:
                      mode: SIMPLE
                      files:
                        privateKey: /etc/certs/privatekey.pem
                        serverCert: /etc/certs/servercert.pem
                    allowedRouteTables:
                      - host: '*.foo.com'
                        selector:
                          workspace: foo-ws
                  - port:
                      number: 9443
                    tls:
                      mode: SIMPLE
                      secretName: my-secret
                    allowedRouteTables:
                      - host: '*.foo.com'
                        selector:
                          workspace: foo-ws
                  - port:
                      number: 9080
                    allowedRouteTables:
                      - host: '*.bar.com'
                        selector:
                          workspace: foo-ws
              ```
              For example, the following VirtualGateway resource configures the gateway to listen for incoming
              HTTP requests on port 80, delegate any `*.foo.com` request to the `HTTPRouteTable` resource(s)
              provided by the `foo-ws` workspace. This routeTable is restricted to using CloudProvider functionality
              which routes to cloud functions `backend-function-*` in region us-east-2 and which assume the
              `dev-team-B-*` IAM role.

              ```yaml
              apiVersion: networking.gloo.solo.io/v2
              kind: VirtualGateway
              metadata:
                name: my-gateway
                namespace: some-config-namespace
                labels:
                  workspace.solo.io/exported: 'true'
              spec:
                workloads:
                  - selector:
                      labels:
                        app: my-gateway-controller
                listeners:
                  - port:
                      number: 80
                    allowedRouteTables:
                      - host: '*.foo.com'
                        selector:
                          workspace: foo-ws
                    allowedRoutes:
                      - cloudProvider:
                          aws:
                            lambda_function:
                              - name: backend-function-*
                            iam_roles:
                              - name: dev-team-B-*
                            regions:
                              - us-east-2
              ```
            properties:
              listeners:
                description: |-
                  Required: One or more listeners for the virtual gateway.
                  Each listener specifies a port and virtual host(s) for traffic received on those ports.
                items:
                  allOf:
                  - oneOf:
                    - not:
                        anyOf:
                        - properties:
                            tls:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - secretName
                                  - required:
                                    - files
                              - required:
                                - secretName
                              - required:
                                - files
                          required:
                          - tls
                        - required:
                          - httpsRedirect
                    - properties:
                        tls:
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - secretName
                              - required:
                                - files
                          - required:
                            - secretName
                          - required:
                            - files
                      required:
                      - tls
                    - required:
                      - httpsRedirect
                  - oneOf:
                    - not:
                        anyOf:
                        - required:
                          - http
                        - required:
                          - tcp
                    - required:
                      - http
                    - required:
                      - tcp
                  properties:
                    allowedRouteTables:
                      description: |-
                        Optional: Filter RouteTables which can bind to this listener by the host names and object metadata.
                        Wildcard matching for host name is supported here.
                        If not specified, any route table will be allowed to bind to this VirtualGateway.
                      items:
                        properties:
                          host:
                            description: 'Required: host name to select. Can use *
                              to match host name patterns in multiple objects.'
                            type: string
                          selector:
                            description: 'Optional: filter out route tables which
                              do not match the selector, if provided.'
                            properties:
                              cluster:
                                description: |-
                                  Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                  matching objects across all clusters available in the parent object's workspace.
                                type: string
                              labels:
                                additionalProperties:
                                  type: string
                                description: labels matching those of the object
                                type: object
                              name:
                                description: |-
                                  Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                  matching objects with any name available in the parent object's workspace.
                                type: string
                              namespace:
                                description: |-
                                  Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                  matching objects across all namespaces available in the parent object's workspace.
                                type: string
                              workspace:
                                description: |-
                                  Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                  matching objects across all workspaces available in the parent object's workspace.
                                type: string
                            type: object
                        type: object
                      type: array
                    appProtocol:
                      description: |-
                        Optional: Apply an application protocol to use when deciding what additional capabilities to
                        add to the gateway, such as routing and rich metrics. If no protocol is selected, it will be inferred
                        from the listener type and its TLS settings. With an `http` listener, the `app_protocol` will default to
                        `HTTP` if there are no TLS settings and `HTTPS` if there are. With a `tcp` listener, the `app_protocol`
                        will default to `TCP` or `TLS` depending on the presence of TLS settings.
                      type: string
                    http:
                      description: |-
                        Serves http requests on the hosts specified for a given listener.
                        The listener will route traffic based on the HTTPRouteTable resource(s)
                        that is attached to the virtual gateway.
                      type: object
                    httpsRedirect:
                      description: |-
                        If set to true, the load balancer will send a 301 redirect for all http connections,
                        asking the clients to use HTTPS.
                      type: boolean
                    port:
                      description: |-
                        Required: The port on the gateway workload's service on
                        which the gateway will listen for connections to route.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    tcp:
                      description: |-
                        tcp routes on based on sni server name
                        requires tls to be enabled
                      type: object
                    tls:
                      description: TLS configure for a virtual host or listener to
                        use TLS
                      properties:
                        files:
                          description: Files reference paths to certificates which
                            can be read by the proxy off of its local filesystem
                          properties:
                            caCerts:
                              description: |-
                                Required if tlsMode is `MUTUAL`. The path to the file that contains the
                                certificate authority(CA) certificates for validating client cert.
                              type: string
                            privateKey:
                              description: |-
                                Required if tlsMode is `SIMPLE` or `MUTUAL`. The path to the file that
                                contains the server's private key.
                              type: string
                            serverCert:
                              description: |-
                                Required if tlsMode is `SIMPLE` or `MUTUAL`. The path to the file that
                                contains the server side TLS certificate.
                              type: string
                          type: object
                        mode:
                          description: TLS modes enforced by the proxy
                          enum:
                          - PASSTHROUGH
                          - SIMPLE
                          - MUTUAL
                          - AUTO_PASSTHROUGH
                          - ISTIO_MUTUAL
                          type: string
                        parameters:
                          properties:
                            cipherSuites:
                              items:
                                type: string
                              type: array
                            maximumProtocolVersion:
                              enum:
                              - TLS_AUTO
                              - TLSv1_0
                              - TLSv1_1
                              - TLSv1_2
                              - TLSv1_3
                              type: string
                            minimumProtocolVersion:
                              enum:
                              - TLS_AUTO
                              - TLSv1_0
                              - TLSv1_1
                              - TLSv1_2
                              - TLSv1_3
                              type: string
                          type: object
                        secretName:
                          description: |-
                            SecretName is the name of the kubernetes secret which contains the ssl secret. Each
                            Gateway will look for a secret with this name on its own local cluster in its own namespace.
                          type: string
                        verifySubjectAltName:
                          description: |-
                            Verify that the Subject Alternative Name in the peer certificate is one of the specified values.
                            note that a ca_certs must be provided if this option is used.
                          items:
                            type: string
                          type: array
                      type: object
                  type: object
                type: array
              workloads:
                description: |-
                  Optional: Select which gateway workloads implement this virtual gateway in the same workspace.
                  A gateway workload will be selected if it matches any of the provided selectors.
                  For 'selector.name', specify the gateway service's name.
                  For 'selector.labels', specify the gateway service's 'spec.selector' label.
                  If workloads is nil, it will be applied to all gateway workloads.
                items:
                  properties:
                    kind:
                      description: The kind of workload being selected. Defaults to
                        Kube.
                      enum:
                      - KUBE
                      - VM
                      type: string
                    port:
                      description: |-
                        The port to select on the selected workloads.
                        Only applies to policies which select specific workload ports, such as the WasmDeploymentPolicy.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    selector:
                      description: Selector used to match Workload objects by their
                        metadata.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          status:
            description: reflects the status of the gateway Template
            properties:
              allowedRouteTables:
                description: list of RouteTables allowed to bind to this VirtualGateway
                items:
                  properties:
                    cluster:
                      description: the cluster of the object. if the field is omitted,
                        Gloo Mesh will use the same cluster as the parent object containing
                        this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. if the field is omitted,
                        Gloo Mesh will use the same namespace as the parent object
                        containing this reference.
                      type: string
                  type: object
                type: array
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              workloads:
                description: workloads selected by this VirtualGateway
                items:
                  properties:
                    cluster:
                      description: the cluster of the object. if the field is omitted,
                        Gloo Mesh will use the same cluster as the parent object containing
                        this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. if the field is omitted,
                        Gloo Mesh will use the same namespace as the parent object
                        containing this reference.
                      type: string
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
